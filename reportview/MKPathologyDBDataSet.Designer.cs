//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace reportview {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("MKPathologyDBDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class MKPathologyDBDataSet : global::System.Data.DataSet {
        
        private BL_SampleinfoDataTable tableBL_Sampleinfo;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public MKPathologyDBDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected MKPathologyDBDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["BL_Sampleinfo"] != null)) {
                    base.Tables.Add(new BL_SampleinfoDataTable(ds.Tables["BL_Sampleinfo"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BL_SampleinfoDataTable BL_Sampleinfo {
            get {
                return this.tableBL_Sampleinfo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            MKPathologyDBDataSet cln = ((MKPathologyDBDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["BL_Sampleinfo"] != null)) {
                    base.Tables.Add(new BL_SampleinfoDataTable(ds.Tables["BL_Sampleinfo"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableBL_Sampleinfo = ((BL_SampleinfoDataTable)(base.Tables["BL_Sampleinfo"]));
            if ((initTable == true)) {
                if ((this.tableBL_Sampleinfo != null)) {
                    this.tableBL_Sampleinfo.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitClass() {
            this.DataSetName = "MKPathologyDBDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/MKPathologyDBDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableBL_Sampleinfo = new BL_SampleinfoDataTable();
            base.Tables.Add(this.tableBL_Sampleinfo);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeBL_Sampleinfo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            MKPathologyDBDataSet ds = new MKPathologyDBDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void BL_SampleinfoRowChangeEventHandler(object sender, BL_SampleinfoRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BL_SampleinfoDataTable : global::System.Data.TypedTableBase<BL_SampleinfoRow> {
            
            private global::System.Data.DataColumn columnsampleId;
            
            private global::System.Data.DataColumn columndiseaseId;
            
            private global::System.Data.DataColumn columnbarcode;
            
            private global::System.Data.DataColumn columnpathologyNo;
            
            private global::System.Data.DataColumn columnreportNo;
            
            private global::System.Data.DataColumn columnsampleNo;
            
            private global::System.Data.DataColumn columncustomerBarcode;
            
            private global::System.Data.DataColumn columnrequestNo;
            
            private global::System.Data.DataColumn columnoriginalPathNo;
            
            private global::System.Data.DataColumn columnpatientName;
            
            private global::System.Data.DataColumn columnsex;
            
            private global::System.Data.DataColumn columnage;
            
            private global::System.Data.DataColumn columnageType;
            
            private global::System.Data.DataColumn columnbirthday;
            
            private global::System.Data.DataColumn columnmenopause;
            
            private global::System.Data.DataColumn columnLMPDate;
            
            private global::System.Data.DataColumn columncustomerCode;
            
            private global::System.Data.DataColumn columncustomerName;
            
            private global::System.Data.DataColumn columnpatientType;
            
            private global::System.Data.DataColumn columnpatientId;
            
            private global::System.Data.DataColumn columnwardCode;
            
            private global::System.Data.DataColumn columnwardName;
            
            private global::System.Data.DataColumn columnbedNo;
            
            private global::System.Data.DataColumn columndepartmentCode;
            
            private global::System.Data.DataColumn columndepartmentName;
            
            private global::System.Data.DataColumn columndoctorId;
            
            private global::System.Data.DataColumn columndoctorName;
            
            private global::System.Data.DataColumn columncardNo;
            
            private global::System.Data.DataColumn columnIDNumber;
            
            private global::System.Data.DataColumn columnmedicalInsuranceType;
            
            private global::System.Data.DataColumn columnmedicalInsuranceNo;
            
            private global::System.Data.DataColumn columncollectTime;
            
            private global::System.Data.DataColumn columnreceiveTime;
            
            private global::System.Data.DataColumn columnmaritalStatus;
            
            private global::System.Data.DataColumn columntelphoneNo;
            
            private global::System.Data.DataColumn columnaddress;
            
            private global::System.Data.DataColumn columndiagnosis;
            
            private global::System.Data.DataColumn columnregistrant;
            
            private global::System.Data.DataColumn columnregistrationTime;
            
            private global::System.Data.DataColumn columnmodifyTime;
            
            private global::System.Data.DataColumn columnmodifier;
            
            private global::System.Data.DataColumn columncreateTime;
            
            private global::System.Data.DataColumn columncreater;
            
            private global::System.Data.DataColumn columnfreezeFlag;
            
            private global::System.Data.DataColumn columncellaFlag;
            
            private global::System.Data.DataColumn columnspecimenName;
            
            private global::System.Data.DataColumn columnspecimenType;
            
            private global::System.Data.DataColumn columnspecimenNumber;
            
            private global::System.Data.DataColumn columnspecimenQuantity;
            
            private global::System.Data.DataColumn columnunqualifiedReason;
            
            private global::System.Data.DataColumn columnflakingMethod;
            
            private global::System.Data.DataColumn columnremark;
            
            private global::System.Data.DataColumn columnpositiveFlag;
            
            private global::System.Data.DataColumn columnretakeFlag;
            
            private global::System.Data.DataColumn columnreportTime;
            
            private global::System.Data.DataColumn columndiagnosisDoctor;
            
            private global::System.Data.DataColumn columncheckDoctor;
            
            private global::System.Data.DataColumn columnverifier;
            
            private global::System.Data.DataColumn columnscreeningMan;
            
            private global::System.Data.DataColumn columnsampleDoctorId;
            
            private global::System.Data.DataColumn columnsampleDoctorName;
            
            private global::System.Data.DataColumn columnsampleTime;
            
            private global::System.Data.DataColumn columnsamplePart;
            
            private global::System.Data.DataColumn columncheckItemId;
            
            private global::System.Data.DataColumn columncheckItemName;
            
            private global::System.Data.DataColumn columncheckCount;
            
            private global::System.Data.DataColumn columnpinyiCode;
            
            private global::System.Data.DataColumn columnwubiCode;
            
            private global::System.Data.DataColumn columnresultXML;
            
            private global::System.Data.DataColumn columnsampleStatus;
            
            private global::System.Data.DataColumn columnsap_xsdd;
            
            private global::System.Data.DataColumn columnsap_xxmh;
            
            private global::System.Data.DataColumn columnpostscript;
            
            private global::System.Data.DataColumn columnfirstDoctor;
            
            private global::System.Data.DataColumn columnapproveOfficer;
            
            private global::System.Data.DataColumn columnpayType;
            
            private global::System.Data.DataColumn columnPrintTime;
            
            private global::System.Data.DataColumn columnPrinter;
            
            private global::System.Data.DataColumn columnPrintMac;
            
            private global::System.Data.DataColumn columndiseaseName;
            
            private global::System.Data.DataColumn columnreportDoubleFlag;
            
            private global::System.Data.DataColumn columnBaseChecker;
            
            private global::System.Data.DataColumn columnneizhu;
            
            private global::System.Data.DataColumn columnsapTradeFlag;
            
            private global::System.Data.DataColumn columncrisisFlag;
            
            private global::System.Data.DataColumn columnprintTimes;
            
            private global::System.Data.DataColumn columnmkbarcode;
            
            private global::System.Data.DataColumn columnmkprintflag;
            
            private global::System.Data.DataColumn columnistakeaway;
            
            private global::System.Data.DataColumn columnsqrq;
            
            private global::System.Data.DataColumn columnoffBodyTime;
            
            private global::System.Data.DataColumn columntransDoctel;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public BL_SampleinfoDataTable() {
                this.TableName = "BL_Sampleinfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal BL_SampleinfoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected BL_SampleinfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn sampleIdColumn {
                get {
                    return this.columnsampleId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn diseaseIdColumn {
                get {
                    return this.columndiseaseId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn barcodeColumn {
                get {
                    return this.columnbarcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn pathologyNoColumn {
                get {
                    return this.columnpathologyNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn reportNoColumn {
                get {
                    return this.columnreportNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn sampleNoColumn {
                get {
                    return this.columnsampleNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn customerBarcodeColumn {
                get {
                    return this.columncustomerBarcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn requestNoColumn {
                get {
                    return this.columnrequestNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn originalPathNoColumn {
                get {
                    return this.columnoriginalPathNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn patientNameColumn {
                get {
                    return this.columnpatientName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn sexColumn {
                get {
                    return this.columnsex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ageColumn {
                get {
                    return this.columnage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ageTypeColumn {
                get {
                    return this.columnageType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn birthdayColumn {
                get {
                    return this.columnbirthday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn menopauseColumn {
                get {
                    return this.columnmenopause;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LMPDateColumn {
                get {
                    return this.columnLMPDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn customerCodeColumn {
                get {
                    return this.columncustomerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn customerNameColumn {
                get {
                    return this.columncustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn patientTypeColumn {
                get {
                    return this.columnpatientType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn patientIdColumn {
                get {
                    return this.columnpatientId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn wardCodeColumn {
                get {
                    return this.columnwardCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn wardNameColumn {
                get {
                    return this.columnwardName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn bedNoColumn {
                get {
                    return this.columnbedNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn departmentCodeColumn {
                get {
                    return this.columndepartmentCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn departmentNameColumn {
                get {
                    return this.columndepartmentName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn doctorIdColumn {
                get {
                    return this.columndoctorId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn doctorNameColumn {
                get {
                    return this.columndoctorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn cardNoColumn {
                get {
                    return this.columncardNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IDNumberColumn {
                get {
                    return this.columnIDNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn medicalInsuranceTypeColumn {
                get {
                    return this.columnmedicalInsuranceType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn medicalInsuranceNoColumn {
                get {
                    return this.columnmedicalInsuranceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn collectTimeColumn {
                get {
                    return this.columncollectTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn receiveTimeColumn {
                get {
                    return this.columnreceiveTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn maritalStatusColumn {
                get {
                    return this.columnmaritalStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn telphoneNoColumn {
                get {
                    return this.columntelphoneNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn addressColumn {
                get {
                    return this.columnaddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn diagnosisColumn {
                get {
                    return this.columndiagnosis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn registrantColumn {
                get {
                    return this.columnregistrant;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn registrationTimeColumn {
                get {
                    return this.columnregistrationTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn modifyTimeColumn {
                get {
                    return this.columnmodifyTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn modifierColumn {
                get {
                    return this.columnmodifier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn createTimeColumn {
                get {
                    return this.columncreateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn createrColumn {
                get {
                    return this.columncreater;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn freezeFlagColumn {
                get {
                    return this.columnfreezeFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn cellaFlagColumn {
                get {
                    return this.columncellaFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn specimenNameColumn {
                get {
                    return this.columnspecimenName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn specimenTypeColumn {
                get {
                    return this.columnspecimenType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn specimenNumberColumn {
                get {
                    return this.columnspecimenNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn specimenQuantityColumn {
                get {
                    return this.columnspecimenQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn unqualifiedReasonColumn {
                get {
                    return this.columnunqualifiedReason;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn flakingMethodColumn {
                get {
                    return this.columnflakingMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn remarkColumn {
                get {
                    return this.columnremark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn positiveFlagColumn {
                get {
                    return this.columnpositiveFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn retakeFlagColumn {
                get {
                    return this.columnretakeFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn reportTimeColumn {
                get {
                    return this.columnreportTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn diagnosisDoctorColumn {
                get {
                    return this.columndiagnosisDoctor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn checkDoctorColumn {
                get {
                    return this.columncheckDoctor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn verifierColumn {
                get {
                    return this.columnverifier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn screeningManColumn {
                get {
                    return this.columnscreeningMan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn sampleDoctorIdColumn {
                get {
                    return this.columnsampleDoctorId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn sampleDoctorNameColumn {
                get {
                    return this.columnsampleDoctorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn sampleTimeColumn {
                get {
                    return this.columnsampleTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn samplePartColumn {
                get {
                    return this.columnsamplePart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn checkItemIdColumn {
                get {
                    return this.columncheckItemId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn checkItemNameColumn {
                get {
                    return this.columncheckItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn checkCountColumn {
                get {
                    return this.columncheckCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn pinyiCodeColumn {
                get {
                    return this.columnpinyiCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn wubiCodeColumn {
                get {
                    return this.columnwubiCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn resultXMLColumn {
                get {
                    return this.columnresultXML;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn sampleStatusColumn {
                get {
                    return this.columnsampleStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn sap_xsddColumn {
                get {
                    return this.columnsap_xsdd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn sap_xxmhColumn {
                get {
                    return this.columnsap_xxmh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn postscriptColumn {
                get {
                    return this.columnpostscript;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn firstDoctorColumn {
                get {
                    return this.columnfirstDoctor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn approveOfficerColumn {
                get {
                    return this.columnapproveOfficer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn payTypeColumn {
                get {
                    return this.columnpayType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PrintTimeColumn {
                get {
                    return this.columnPrintTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PrinterColumn {
                get {
                    return this.columnPrinter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PrintMacColumn {
                get {
                    return this.columnPrintMac;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn diseaseNameColumn {
                get {
                    return this.columndiseaseName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn reportDoubleFlagColumn {
                get {
                    return this.columnreportDoubleFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BaseCheckerColumn {
                get {
                    return this.columnBaseChecker;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn neizhuColumn {
                get {
                    return this.columnneizhu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn sapTradeFlagColumn {
                get {
                    return this.columnsapTradeFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn crisisFlagColumn {
                get {
                    return this.columncrisisFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn printTimesColumn {
                get {
                    return this.columnprintTimes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn mkbarcodeColumn {
                get {
                    return this.columnmkbarcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn mkprintflagColumn {
                get {
                    return this.columnmkprintflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn istakeawayColumn {
                get {
                    return this.columnistakeaway;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn sqrqColumn {
                get {
                    return this.columnsqrq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn offBodyTimeColumn {
                get {
                    return this.columnoffBodyTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn transDoctelColumn {
                get {
                    return this.columntransDoctel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public BL_SampleinfoRow this[int index] {
                get {
                    return ((BL_SampleinfoRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event BL_SampleinfoRowChangeEventHandler BL_SampleinfoRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event BL_SampleinfoRowChangeEventHandler BL_SampleinfoRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event BL_SampleinfoRowChangeEventHandler BL_SampleinfoRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event BL_SampleinfoRowChangeEventHandler BL_SampleinfoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddBL_SampleinfoRow(BL_SampleinfoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public BL_SampleinfoRow AddBL_SampleinfoRow(
                        string diseaseId, 
                        string barcode, 
                        string pathologyNo, 
                        string reportNo, 
                        string sampleNo, 
                        string customerBarcode, 
                        string requestNo, 
                        string originalPathNo, 
                        string patientName, 
                        string sex, 
                        string age, 
                        string ageType, 
                        System.DateTime birthday, 
                        string menopause, 
                        System.DateTime LMPDate, 
                        string customerCode, 
                        string customerName, 
                        string patientType, 
                        string patientId, 
                        string wardCode, 
                        string wardName, 
                        string bedNo, 
                        string departmentCode, 
                        string departmentName, 
                        string doctorId, 
                        string doctorName, 
                        string cardNo, 
                        string IDNumber, 
                        string medicalInsuranceType, 
                        string medicalInsuranceNo, 
                        System.DateTime collectTime, 
                        System.DateTime receiveTime, 
                        string maritalStatus, 
                        string telphoneNo, 
                        string address, 
                        string diagnosis, 
                        string registrant, 
                        System.DateTime registrationTime, 
                        System.DateTime modifyTime, 
                        string modifier, 
                        System.DateTime createTime, 
                        string creater, 
                        string freezeFlag, 
                        string cellaFlag, 
                        string specimenName, 
                        string specimenType, 
                        string specimenNumber, 
                        string specimenQuantity, 
                        string unqualifiedReason, 
                        string flakingMethod, 
                        string remark, 
                        string positiveFlag, 
                        string retakeFlag, 
                        System.DateTime reportTime, 
                        string diagnosisDoctor, 
                        string checkDoctor, 
                        string verifier, 
                        string screeningMan, 
                        string sampleDoctorId, 
                        string sampleDoctorName, 
                        System.DateTime sampleTime, 
                        string samplePart, 
                        string checkItemId, 
                        string checkItemName, 
                        string checkCount, 
                        string pinyiCode, 
                        string wubiCode, 
                        string resultXML, 
                        string sampleStatus, 
                        string sap_xsdd, 
                        string sap_xxmh, 
                        string postscript, 
                        string firstDoctor, 
                        string approveOfficer, 
                        string payType, 
                        System.DateTime PrintTime, 
                        string Printer, 
                        string PrintMac, 
                        string diseaseName, 
                        int reportDoubleFlag, 
                        string BaseChecker, 
                        string neizhu, 
                        string sapTradeFlag, 
                        string crisisFlag, 
                        string printTimes, 
                        string mkbarcode, 
                        string mkprintflag, 
                        string istakeaway, 
                        System.DateTime sqrq, 
                        System.DateTime offBodyTime, 
                        string transDoctel) {
                BL_SampleinfoRow rowBL_SampleinfoRow = ((BL_SampleinfoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        diseaseId,
                        barcode,
                        pathologyNo,
                        reportNo,
                        sampleNo,
                        customerBarcode,
                        requestNo,
                        originalPathNo,
                        patientName,
                        sex,
                        age,
                        ageType,
                        birthday,
                        menopause,
                        LMPDate,
                        customerCode,
                        customerName,
                        patientType,
                        patientId,
                        wardCode,
                        wardName,
                        bedNo,
                        departmentCode,
                        departmentName,
                        doctorId,
                        doctorName,
                        cardNo,
                        IDNumber,
                        medicalInsuranceType,
                        medicalInsuranceNo,
                        collectTime,
                        receiveTime,
                        maritalStatus,
                        telphoneNo,
                        address,
                        diagnosis,
                        registrant,
                        registrationTime,
                        modifyTime,
                        modifier,
                        createTime,
                        creater,
                        freezeFlag,
                        cellaFlag,
                        specimenName,
                        specimenType,
                        specimenNumber,
                        specimenQuantity,
                        unqualifiedReason,
                        flakingMethod,
                        remark,
                        positiveFlag,
                        retakeFlag,
                        reportTime,
                        diagnosisDoctor,
                        checkDoctor,
                        verifier,
                        screeningMan,
                        sampleDoctorId,
                        sampleDoctorName,
                        sampleTime,
                        samplePart,
                        checkItemId,
                        checkItemName,
                        checkCount,
                        pinyiCode,
                        wubiCode,
                        resultXML,
                        sampleStatus,
                        sap_xsdd,
                        sap_xxmh,
                        postscript,
                        firstDoctor,
                        approveOfficer,
                        payType,
                        PrintTime,
                        Printer,
                        PrintMac,
                        diseaseName,
                        reportDoubleFlag,
                        BaseChecker,
                        neizhu,
                        sapTradeFlag,
                        crisisFlag,
                        printTimes,
                        mkbarcode,
                        mkprintflag,
                        istakeaway,
                        sqrq,
                        offBodyTime,
                        transDoctel};
                rowBL_SampleinfoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBL_SampleinfoRow);
                return rowBL_SampleinfoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public BL_SampleinfoRow FindBysampleId(decimal sampleId) {
                return ((BL_SampleinfoRow)(this.Rows.Find(new object[] {
                            sampleId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                BL_SampleinfoDataTable cln = ((BL_SampleinfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BL_SampleinfoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnsampleId = base.Columns["sampleId"];
                this.columndiseaseId = base.Columns["diseaseId"];
                this.columnbarcode = base.Columns["barcode"];
                this.columnpathologyNo = base.Columns["pathologyNo"];
                this.columnreportNo = base.Columns["reportNo"];
                this.columnsampleNo = base.Columns["sampleNo"];
                this.columncustomerBarcode = base.Columns["customerBarcode"];
                this.columnrequestNo = base.Columns["requestNo"];
                this.columnoriginalPathNo = base.Columns["originalPathNo"];
                this.columnpatientName = base.Columns["patientName"];
                this.columnsex = base.Columns["sex"];
                this.columnage = base.Columns["age"];
                this.columnageType = base.Columns["ageType"];
                this.columnbirthday = base.Columns["birthday"];
                this.columnmenopause = base.Columns["menopause"];
                this.columnLMPDate = base.Columns["LMPDate"];
                this.columncustomerCode = base.Columns["customerCode"];
                this.columncustomerName = base.Columns["customerName"];
                this.columnpatientType = base.Columns["patientType"];
                this.columnpatientId = base.Columns["patientId"];
                this.columnwardCode = base.Columns["wardCode"];
                this.columnwardName = base.Columns["wardName"];
                this.columnbedNo = base.Columns["bedNo"];
                this.columndepartmentCode = base.Columns["departmentCode"];
                this.columndepartmentName = base.Columns["departmentName"];
                this.columndoctorId = base.Columns["doctorId"];
                this.columndoctorName = base.Columns["doctorName"];
                this.columncardNo = base.Columns["cardNo"];
                this.columnIDNumber = base.Columns["IDNumber"];
                this.columnmedicalInsuranceType = base.Columns["medicalInsuranceType"];
                this.columnmedicalInsuranceNo = base.Columns["medicalInsuranceNo"];
                this.columncollectTime = base.Columns["collectTime"];
                this.columnreceiveTime = base.Columns["receiveTime"];
                this.columnmaritalStatus = base.Columns["maritalStatus"];
                this.columntelphoneNo = base.Columns["telphoneNo"];
                this.columnaddress = base.Columns["address"];
                this.columndiagnosis = base.Columns["diagnosis"];
                this.columnregistrant = base.Columns["registrant"];
                this.columnregistrationTime = base.Columns["registrationTime"];
                this.columnmodifyTime = base.Columns["modifyTime"];
                this.columnmodifier = base.Columns["modifier"];
                this.columncreateTime = base.Columns["createTime"];
                this.columncreater = base.Columns["creater"];
                this.columnfreezeFlag = base.Columns["freezeFlag"];
                this.columncellaFlag = base.Columns["cellaFlag"];
                this.columnspecimenName = base.Columns["specimenName"];
                this.columnspecimenType = base.Columns["specimenType"];
                this.columnspecimenNumber = base.Columns["specimenNumber"];
                this.columnspecimenQuantity = base.Columns["specimenQuantity"];
                this.columnunqualifiedReason = base.Columns["unqualifiedReason"];
                this.columnflakingMethod = base.Columns["flakingMethod"];
                this.columnremark = base.Columns["remark"];
                this.columnpositiveFlag = base.Columns["positiveFlag"];
                this.columnretakeFlag = base.Columns["retakeFlag"];
                this.columnreportTime = base.Columns["reportTime"];
                this.columndiagnosisDoctor = base.Columns["diagnosisDoctor"];
                this.columncheckDoctor = base.Columns["checkDoctor"];
                this.columnverifier = base.Columns["verifier"];
                this.columnscreeningMan = base.Columns["screeningMan"];
                this.columnsampleDoctorId = base.Columns["sampleDoctorId"];
                this.columnsampleDoctorName = base.Columns["sampleDoctorName"];
                this.columnsampleTime = base.Columns["sampleTime"];
                this.columnsamplePart = base.Columns["samplePart"];
                this.columncheckItemId = base.Columns["checkItemId"];
                this.columncheckItemName = base.Columns["checkItemName"];
                this.columncheckCount = base.Columns["checkCount"];
                this.columnpinyiCode = base.Columns["pinyiCode"];
                this.columnwubiCode = base.Columns["wubiCode"];
                this.columnresultXML = base.Columns["resultXML"];
                this.columnsampleStatus = base.Columns["sampleStatus"];
                this.columnsap_xsdd = base.Columns["sap_xsdd"];
                this.columnsap_xxmh = base.Columns["sap_xxmh"];
                this.columnpostscript = base.Columns["postscript"];
                this.columnfirstDoctor = base.Columns["firstDoctor"];
                this.columnapproveOfficer = base.Columns["approveOfficer"];
                this.columnpayType = base.Columns["payType"];
                this.columnPrintTime = base.Columns["PrintTime"];
                this.columnPrinter = base.Columns["Printer"];
                this.columnPrintMac = base.Columns["PrintMac"];
                this.columndiseaseName = base.Columns["diseaseName"];
                this.columnreportDoubleFlag = base.Columns["reportDoubleFlag"];
                this.columnBaseChecker = base.Columns["BaseChecker"];
                this.columnneizhu = base.Columns["neizhu"];
                this.columnsapTradeFlag = base.Columns["sapTradeFlag"];
                this.columncrisisFlag = base.Columns["crisisFlag"];
                this.columnprintTimes = base.Columns["printTimes"];
                this.columnmkbarcode = base.Columns["mkbarcode"];
                this.columnmkprintflag = base.Columns["mkprintflag"];
                this.columnistakeaway = base.Columns["istakeaway"];
                this.columnsqrq = base.Columns["sqrq"];
                this.columnoffBodyTime = base.Columns["offBodyTime"];
                this.columntransDoctel = base.Columns["transDoctel"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnsampleId = new global::System.Data.DataColumn("sampleId", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsampleId);
                this.columndiseaseId = new global::System.Data.DataColumn("diseaseId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndiseaseId);
                this.columnbarcode = new global::System.Data.DataColumn("barcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbarcode);
                this.columnpathologyNo = new global::System.Data.DataColumn("pathologyNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpathologyNo);
                this.columnreportNo = new global::System.Data.DataColumn("reportNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreportNo);
                this.columnsampleNo = new global::System.Data.DataColumn("sampleNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsampleNo);
                this.columncustomerBarcode = new global::System.Data.DataColumn("customerBarcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncustomerBarcode);
                this.columnrequestNo = new global::System.Data.DataColumn("requestNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrequestNo);
                this.columnoriginalPathNo = new global::System.Data.DataColumn("originalPathNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoriginalPathNo);
                this.columnpatientName = new global::System.Data.DataColumn("patientName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpatientName);
                this.columnsex = new global::System.Data.DataColumn("sex", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsex);
                this.columnage = new global::System.Data.DataColumn("age", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnage);
                this.columnageType = new global::System.Data.DataColumn("ageType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnageType);
                this.columnbirthday = new global::System.Data.DataColumn("birthday", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbirthday);
                this.columnmenopause = new global::System.Data.DataColumn("menopause", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmenopause);
                this.columnLMPDate = new global::System.Data.DataColumn("LMPDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLMPDate);
                this.columncustomerCode = new global::System.Data.DataColumn("customerCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncustomerCode);
                this.columncustomerName = new global::System.Data.DataColumn("customerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncustomerName);
                this.columnpatientType = new global::System.Data.DataColumn("patientType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpatientType);
                this.columnpatientId = new global::System.Data.DataColumn("patientId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpatientId);
                this.columnwardCode = new global::System.Data.DataColumn("wardCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwardCode);
                this.columnwardName = new global::System.Data.DataColumn("wardName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwardName);
                this.columnbedNo = new global::System.Data.DataColumn("bedNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbedNo);
                this.columndepartmentCode = new global::System.Data.DataColumn("departmentCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepartmentCode);
                this.columndepartmentName = new global::System.Data.DataColumn("departmentName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepartmentName);
                this.columndoctorId = new global::System.Data.DataColumn("doctorId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndoctorId);
                this.columndoctorName = new global::System.Data.DataColumn("doctorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndoctorName);
                this.columncardNo = new global::System.Data.DataColumn("cardNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncardNo);
                this.columnIDNumber = new global::System.Data.DataColumn("IDNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDNumber);
                this.columnmedicalInsuranceType = new global::System.Data.DataColumn("medicalInsuranceType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmedicalInsuranceType);
                this.columnmedicalInsuranceNo = new global::System.Data.DataColumn("medicalInsuranceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmedicalInsuranceNo);
                this.columncollectTime = new global::System.Data.DataColumn("collectTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncollectTime);
                this.columnreceiveTime = new global::System.Data.DataColumn("receiveTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreceiveTime);
                this.columnmaritalStatus = new global::System.Data.DataColumn("maritalStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmaritalStatus);
                this.columntelphoneNo = new global::System.Data.DataColumn("telphoneNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntelphoneNo);
                this.columnaddress = new global::System.Data.DataColumn("address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress);
                this.columndiagnosis = new global::System.Data.DataColumn("diagnosis", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndiagnosis);
                this.columnregistrant = new global::System.Data.DataColumn("registrant", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregistrant);
                this.columnregistrationTime = new global::System.Data.DataColumn("registrationTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregistrationTime);
                this.columnmodifyTime = new global::System.Data.DataColumn("modifyTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodifyTime);
                this.columnmodifier = new global::System.Data.DataColumn("modifier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodifier);
                this.columncreateTime = new global::System.Data.DataColumn("createTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreateTime);
                this.columncreater = new global::System.Data.DataColumn("creater", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreater);
                this.columnfreezeFlag = new global::System.Data.DataColumn("freezeFlag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfreezeFlag);
                this.columncellaFlag = new global::System.Data.DataColumn("cellaFlag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellaFlag);
                this.columnspecimenName = new global::System.Data.DataColumn("specimenName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnspecimenName);
                this.columnspecimenType = new global::System.Data.DataColumn("specimenType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnspecimenType);
                this.columnspecimenNumber = new global::System.Data.DataColumn("specimenNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnspecimenNumber);
                this.columnspecimenQuantity = new global::System.Data.DataColumn("specimenQuantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnspecimenQuantity);
                this.columnunqualifiedReason = new global::System.Data.DataColumn("unqualifiedReason", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnunqualifiedReason);
                this.columnflakingMethod = new global::System.Data.DataColumn("flakingMethod", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflakingMethod);
                this.columnremark = new global::System.Data.DataColumn("remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnremark);
                this.columnpositiveFlag = new global::System.Data.DataColumn("positiveFlag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpositiveFlag);
                this.columnretakeFlag = new global::System.Data.DataColumn("retakeFlag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnretakeFlag);
                this.columnreportTime = new global::System.Data.DataColumn("reportTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreportTime);
                this.columndiagnosisDoctor = new global::System.Data.DataColumn("diagnosisDoctor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndiagnosisDoctor);
                this.columncheckDoctor = new global::System.Data.DataColumn("checkDoctor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncheckDoctor);
                this.columnverifier = new global::System.Data.DataColumn("verifier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnverifier);
                this.columnscreeningMan = new global::System.Data.DataColumn("screeningMan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnscreeningMan);
                this.columnsampleDoctorId = new global::System.Data.DataColumn("sampleDoctorId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsampleDoctorId);
                this.columnsampleDoctorName = new global::System.Data.DataColumn("sampleDoctorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsampleDoctorName);
                this.columnsampleTime = new global::System.Data.DataColumn("sampleTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsampleTime);
                this.columnsamplePart = new global::System.Data.DataColumn("samplePart", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsamplePart);
                this.columncheckItemId = new global::System.Data.DataColumn("checkItemId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncheckItemId);
                this.columncheckItemName = new global::System.Data.DataColumn("checkItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncheckItemName);
                this.columncheckCount = new global::System.Data.DataColumn("checkCount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncheckCount);
                this.columnpinyiCode = new global::System.Data.DataColumn("pinyiCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpinyiCode);
                this.columnwubiCode = new global::System.Data.DataColumn("wubiCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwubiCode);
                this.columnresultXML = new global::System.Data.DataColumn("resultXML", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnresultXML);
                this.columnsampleStatus = new global::System.Data.DataColumn("sampleStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsampleStatus);
                this.columnsap_xsdd = new global::System.Data.DataColumn("sap_xsdd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsap_xsdd);
                this.columnsap_xxmh = new global::System.Data.DataColumn("sap_xxmh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsap_xxmh);
                this.columnpostscript = new global::System.Data.DataColumn("postscript", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpostscript);
                this.columnfirstDoctor = new global::System.Data.DataColumn("firstDoctor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfirstDoctor);
                this.columnapproveOfficer = new global::System.Data.DataColumn("approveOfficer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapproveOfficer);
                this.columnpayType = new global::System.Data.DataColumn("payType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpayType);
                this.columnPrintTime = new global::System.Data.DataColumn("PrintTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrintTime);
                this.columnPrinter = new global::System.Data.DataColumn("Printer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrinter);
                this.columnPrintMac = new global::System.Data.DataColumn("PrintMac", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrintMac);
                this.columndiseaseName = new global::System.Data.DataColumn("diseaseName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndiseaseName);
                this.columnreportDoubleFlag = new global::System.Data.DataColumn("reportDoubleFlag", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreportDoubleFlag);
                this.columnBaseChecker = new global::System.Data.DataColumn("BaseChecker", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseChecker);
                this.columnneizhu = new global::System.Data.DataColumn("neizhu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnneizhu);
                this.columnsapTradeFlag = new global::System.Data.DataColumn("sapTradeFlag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsapTradeFlag);
                this.columncrisisFlag = new global::System.Data.DataColumn("crisisFlag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncrisisFlag);
                this.columnprintTimes = new global::System.Data.DataColumn("printTimes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprintTimes);
                this.columnmkbarcode = new global::System.Data.DataColumn("mkbarcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmkbarcode);
                this.columnmkprintflag = new global::System.Data.DataColumn("mkprintflag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmkprintflag);
                this.columnistakeaway = new global::System.Data.DataColumn("istakeaway", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnistakeaway);
                this.columnsqrq = new global::System.Data.DataColumn("sqrq", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsqrq);
                this.columnoffBodyTime = new global::System.Data.DataColumn("offBodyTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoffBodyTime);
                this.columntransDoctel = new global::System.Data.DataColumn("transDoctel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntransDoctel);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnsampleId}, true));
                this.columnsampleId.AutoIncrement = true;
                this.columnsampleId.AutoIncrementSeed = -1;
                this.columnsampleId.AutoIncrementStep = -1;
                this.columnsampleId.AllowDBNull = false;
                this.columnsampleId.ReadOnly = true;
                this.columnsampleId.Unique = true;
                this.columndiseaseId.AllowDBNull = false;
                this.columndiseaseId.MaxLength = 32;
                this.columnbarcode.MaxLength = 32;
                this.columnpathologyNo.AllowDBNull = false;
                this.columnpathologyNo.MaxLength = 32;
                this.columnreportNo.AllowDBNull = false;
                this.columnreportNo.MaxLength = 32;
                this.columnsampleNo.AllowDBNull = false;
                this.columnsampleNo.MaxLength = 32;
                this.columncustomerBarcode.MaxLength = 32;
                this.columnrequestNo.MaxLength = 32;
                this.columnoriginalPathNo.MaxLength = 32;
                this.columnpatientName.AllowDBNull = false;
                this.columnpatientName.MaxLength = 32;
                this.columnsex.MaxLength = 5;
                this.columnage.MaxLength = 5;
                this.columnageType.MaxLength = 5;
                this.columnmenopause.MaxLength = 5;
                this.columncustomerCode.MaxLength = 32;
                this.columncustomerName.MaxLength = 50;
                this.columnpatientType.MaxLength = 32;
                this.columnpatientId.MaxLength = 32;
                this.columnwardCode.MaxLength = 32;
                this.columnwardName.MaxLength = 32;
                this.columnbedNo.MaxLength = 32;
                this.columndepartmentCode.MaxLength = 32;
                this.columndepartmentName.MaxLength = 32;
                this.columndoctorId.MaxLength = 32;
                this.columndoctorName.MaxLength = 32;
                this.columncardNo.MaxLength = 32;
                this.columnIDNumber.MaxLength = 50;
                this.columnmedicalInsuranceType.MaxLength = 32;
                this.columnmedicalInsuranceNo.MaxLength = 32;
                this.columnmaritalStatus.MaxLength = 32;
                this.columntelphoneNo.MaxLength = 32;
                this.columnaddress.MaxLength = 128;
                this.columndiagnosis.MaxLength = 128;
                this.columnregistrant.MaxLength = 32;
                this.columnmodifyTime.AllowDBNull = false;
                this.columnmodifier.MaxLength = 50;
                this.columncreateTime.AllowDBNull = false;
                this.columncreater.MaxLength = 50;
                this.columnfreezeFlag.MaxLength = 32;
                this.columncellaFlag.MaxLength = 32;
                this.columnspecimenName.MaxLength = 50;
                this.columnspecimenType.MaxLength = 32;
                this.columnspecimenNumber.MaxLength = 32;
                this.columnspecimenQuantity.MaxLength = 32;
                this.columnunqualifiedReason.MaxLength = 500;
                this.columnflakingMethod.MaxLength = 32;
                this.columnremark.MaxLength = 2147483647;
                this.columnpositiveFlag.AllowDBNull = false;
                this.columnpositiveFlag.MaxLength = 5;
                this.columnretakeFlag.AllowDBNull = false;
                this.columnretakeFlag.MaxLength = 5;
                this.columndiagnosisDoctor.MaxLength = 50;
                this.columncheckDoctor.MaxLength = 50;
                this.columnverifier.MaxLength = 50;
                this.columnscreeningMan.MaxLength = 50;
                this.columnsampleDoctorId.MaxLength = 32;
                this.columnsampleDoctorName.MaxLength = 50;
                this.columnsamplePart.MaxLength = 32;
                this.columncheckItemId.MaxLength = 200;
                this.columncheckItemName.MaxLength = 2147483647;
                this.columncheckCount.MaxLength = 5;
                this.columnpinyiCode.MaxLength = 32;
                this.columnwubiCode.MaxLength = 32;
                this.columnresultXML.MaxLength = 2147483647;
                this.columnsampleStatus.MaxLength = 32;
                this.columnsap_xsdd.MaxLength = 200;
                this.columnsap_xxmh.MaxLength = 2147483647;
                this.columnpostscript.MaxLength = 150;
                this.columnfirstDoctor.MaxLength = 50;
                this.columnapproveOfficer.MaxLength = 50;
                this.columnpayType.AllowDBNull = false;
                this.columnpayType.MaxLength = 10;
                this.columnPrinter.MaxLength = 32;
                this.columnPrintMac.MaxLength = 32;
                this.columndiseaseName.MaxLength = 32;
                this.columnreportDoubleFlag.AllowDBNull = false;
                this.columnBaseChecker.MaxLength = 20;
                this.columnneizhu.MaxLength = 2147483647;
                this.columnsapTradeFlag.MaxLength = 5;
                this.columncrisisFlag.AllowDBNull = false;
                this.columncrisisFlag.MaxLength = 5;
                this.columnprintTimes.MaxLength = 5;
                this.columnmkbarcode.MaxLength = 32;
                this.columnmkprintflag.MaxLength = 32;
                this.columnistakeaway.MaxLength = 10;
                this.columntransDoctel.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public BL_SampleinfoRow NewBL_SampleinfoRow() {
                return ((BL_SampleinfoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BL_SampleinfoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(BL_SampleinfoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BL_SampleinfoRowChanged != null)) {
                    this.BL_SampleinfoRowChanged(this, new BL_SampleinfoRowChangeEvent(((BL_SampleinfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BL_SampleinfoRowChanging != null)) {
                    this.BL_SampleinfoRowChanging(this, new BL_SampleinfoRowChangeEvent(((BL_SampleinfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BL_SampleinfoRowDeleted != null)) {
                    this.BL_SampleinfoRowDeleted(this, new BL_SampleinfoRowChangeEvent(((BL_SampleinfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BL_SampleinfoRowDeleting != null)) {
                    this.BL_SampleinfoRowDeleting(this, new BL_SampleinfoRowChangeEvent(((BL_SampleinfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveBL_SampleinfoRow(BL_SampleinfoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MKPathologyDBDataSet ds = new MKPathologyDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BL_SampleinfoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BL_SampleinfoRow : global::System.Data.DataRow {
            
            private BL_SampleinfoDataTable tableBL_Sampleinfo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal BL_SampleinfoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBL_Sampleinfo = ((BL_SampleinfoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal sampleId {
                get {
                    return ((decimal)(this[this.tableBL_Sampleinfo.sampleIdColumn]));
                }
                set {
                    this[this.tableBL_Sampleinfo.sampleIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string diseaseId {
                get {
                    return ((string)(this[this.tableBL_Sampleinfo.diseaseIdColumn]));
                }
                set {
                    this[this.tableBL_Sampleinfo.diseaseIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string barcode {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.barcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“barcode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.barcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string pathologyNo {
                get {
                    return ((string)(this[this.tableBL_Sampleinfo.pathologyNoColumn]));
                }
                set {
                    this[this.tableBL_Sampleinfo.pathologyNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string reportNo {
                get {
                    return ((string)(this[this.tableBL_Sampleinfo.reportNoColumn]));
                }
                set {
                    this[this.tableBL_Sampleinfo.reportNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string sampleNo {
                get {
                    return ((string)(this[this.tableBL_Sampleinfo.sampleNoColumn]));
                }
                set {
                    this[this.tableBL_Sampleinfo.sampleNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string customerBarcode {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.customerBarcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“customerBarcode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.customerBarcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string requestNo {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.requestNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“requestNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.requestNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string originalPathNo {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.originalPathNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“originalPathNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.originalPathNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string patientName {
                get {
                    return ((string)(this[this.tableBL_Sampleinfo.patientNameColumn]));
                }
                set {
                    this[this.tableBL_Sampleinfo.patientNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string sex {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.sexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“sex”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.sexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string age {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.ageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“age”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.ageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ageType {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.ageTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“ageType”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.ageTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime birthday {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBL_Sampleinfo.birthdayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“birthday”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.birthdayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string menopause {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.menopauseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“menopause”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.menopauseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime LMPDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBL_Sampleinfo.LMPDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“LMPDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.LMPDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string customerCode {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.customerCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“customerCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.customerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string customerName {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.customerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“customerName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.customerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string patientType {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.patientTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“patientType”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.patientTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string patientId {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.patientIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“patientId”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.patientIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string wardCode {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.wardCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“wardCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.wardCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string wardName {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.wardNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“wardName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.wardNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string bedNo {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.bedNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“bedNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.bedNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string departmentCode {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.departmentCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“departmentCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.departmentCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string departmentName {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.departmentNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“departmentName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.departmentNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string doctorId {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.doctorIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“doctorId”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.doctorIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string doctorName {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.doctorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“doctorName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.doctorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string cardNo {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.cardNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“cardNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.cardNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string IDNumber {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.IDNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“IDNumber”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.IDNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string medicalInsuranceType {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.medicalInsuranceTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“medicalInsuranceType”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.medicalInsuranceTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string medicalInsuranceNo {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.medicalInsuranceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“medicalInsuranceNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.medicalInsuranceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime collectTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBL_Sampleinfo.collectTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“collectTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.collectTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime receiveTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBL_Sampleinfo.receiveTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“receiveTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.receiveTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string maritalStatus {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.maritalStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“maritalStatus”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.maritalStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string telphoneNo {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.telphoneNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“telphoneNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.telphoneNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string address {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.addressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“address”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string diagnosis {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.diagnosisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“diagnosis”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.diagnosisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string registrant {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.registrantColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“registrant”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.registrantColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime registrationTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBL_Sampleinfo.registrationTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“registrationTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.registrationTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime modifyTime {
                get {
                    return ((global::System.DateTime)(this[this.tableBL_Sampleinfo.modifyTimeColumn]));
                }
                set {
                    this[this.tableBL_Sampleinfo.modifyTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string modifier {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.modifierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“modifier”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.modifierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime createTime {
                get {
                    return ((global::System.DateTime)(this[this.tableBL_Sampleinfo.createTimeColumn]));
                }
                set {
                    this[this.tableBL_Sampleinfo.createTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string creater {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.createrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“creater”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.createrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string freezeFlag {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.freezeFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“freezeFlag”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.freezeFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string cellaFlag {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.cellaFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“cellaFlag”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.cellaFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string specimenName {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.specimenNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“specimenName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.specimenNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string specimenType {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.specimenTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“specimenType”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.specimenTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string specimenNumber {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.specimenNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“specimenNumber”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.specimenNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string specimenQuantity {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.specimenQuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“specimenQuantity”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.specimenQuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string unqualifiedReason {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.unqualifiedReasonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“unqualifiedReason”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.unqualifiedReasonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string flakingMethod {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.flakingMethodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“flakingMethod”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.flakingMethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string remark {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.remarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“remark”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.remarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string positiveFlag {
                get {
                    return ((string)(this[this.tableBL_Sampleinfo.positiveFlagColumn]));
                }
                set {
                    this[this.tableBL_Sampleinfo.positiveFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string retakeFlag {
                get {
                    return ((string)(this[this.tableBL_Sampleinfo.retakeFlagColumn]));
                }
                set {
                    this[this.tableBL_Sampleinfo.retakeFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime reportTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBL_Sampleinfo.reportTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“reportTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.reportTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string diagnosisDoctor {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.diagnosisDoctorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“diagnosisDoctor”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.diagnosisDoctorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string checkDoctor {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.checkDoctorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“checkDoctor”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.checkDoctorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string verifier {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.verifierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“verifier”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.verifierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string screeningMan {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.screeningManColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“screeningMan”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.screeningManColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string sampleDoctorId {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.sampleDoctorIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“sampleDoctorId”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.sampleDoctorIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string sampleDoctorName {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.sampleDoctorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“sampleDoctorName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.sampleDoctorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime sampleTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBL_Sampleinfo.sampleTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“sampleTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.sampleTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string samplePart {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.samplePartColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“samplePart”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.samplePartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string checkItemId {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.checkItemIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“checkItemId”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.checkItemIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string checkItemName {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.checkItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“checkItemName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.checkItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string checkCount {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.checkCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“checkCount”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.checkCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string pinyiCode {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.pinyiCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“pinyiCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.pinyiCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string wubiCode {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.wubiCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“wubiCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.wubiCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string resultXML {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.resultXMLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“resultXML”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.resultXMLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string sampleStatus {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.sampleStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“sampleStatus”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.sampleStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string sap_xsdd {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.sap_xsddColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“sap_xsdd”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.sap_xsddColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string sap_xxmh {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.sap_xxmhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“sap_xxmh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.sap_xxmhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string postscript {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.postscriptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“postscript”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.postscriptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string firstDoctor {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.firstDoctorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“firstDoctor”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.firstDoctorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string approveOfficer {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.approveOfficerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“approveOfficer”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.approveOfficerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string payType {
                get {
                    return ((string)(this[this.tableBL_Sampleinfo.payTypeColumn]));
                }
                set {
                    this[this.tableBL_Sampleinfo.payTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime PrintTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBL_Sampleinfo.PrintTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“PrintTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.PrintTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Printer {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.PrinterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“Printer”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.PrinterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PrintMac {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.PrintMacColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“PrintMac”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.PrintMacColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string diseaseName {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.diseaseNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“diseaseName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.diseaseNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int reportDoubleFlag {
                get {
                    return ((int)(this[this.tableBL_Sampleinfo.reportDoubleFlagColumn]));
                }
                set {
                    this[this.tableBL_Sampleinfo.reportDoubleFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BaseChecker {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.BaseCheckerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“BaseChecker”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.BaseCheckerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string neizhu {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.neizhuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“neizhu”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.neizhuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string sapTradeFlag {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.sapTradeFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“sapTradeFlag”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.sapTradeFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string crisisFlag {
                get {
                    return ((string)(this[this.tableBL_Sampleinfo.crisisFlagColumn]));
                }
                set {
                    this[this.tableBL_Sampleinfo.crisisFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string printTimes {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.printTimesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“printTimes”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.printTimesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string mkbarcode {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.mkbarcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“mkbarcode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.mkbarcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string mkprintflag {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.mkprintflagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“mkprintflag”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.mkprintflagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string istakeaway {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.istakeawayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“istakeaway”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.istakeawayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime sqrq {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBL_Sampleinfo.sqrqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“sqrq”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.sqrqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime offBodyTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBL_Sampleinfo.offBodyTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“offBodyTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.offBodyTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string transDoctel {
                get {
                    try {
                        return ((string)(this[this.tableBL_Sampleinfo.transDoctelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BL_Sampleinfo”中列“transDoctel”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBL_Sampleinfo.transDoctelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsbarcodeNull() {
                return this.IsNull(this.tableBL_Sampleinfo.barcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetbarcodeNull() {
                this[this.tableBL_Sampleinfo.barcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IscustomerBarcodeNull() {
                return this.IsNull(this.tableBL_Sampleinfo.customerBarcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetcustomerBarcodeNull() {
                this[this.tableBL_Sampleinfo.customerBarcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsrequestNoNull() {
                return this.IsNull(this.tableBL_Sampleinfo.requestNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetrequestNoNull() {
                this[this.tableBL_Sampleinfo.requestNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsoriginalPathNoNull() {
                return this.IsNull(this.tableBL_Sampleinfo.originalPathNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetoriginalPathNoNull() {
                this[this.tableBL_Sampleinfo.originalPathNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IssexNull() {
                return this.IsNull(this.tableBL_Sampleinfo.sexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetsexNull() {
                this[this.tableBL_Sampleinfo.sexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsageNull() {
                return this.IsNull(this.tableBL_Sampleinfo.ageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetageNull() {
                this[this.tableBL_Sampleinfo.ageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsageTypeNull() {
                return this.IsNull(this.tableBL_Sampleinfo.ageTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetageTypeNull() {
                this[this.tableBL_Sampleinfo.ageTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsbirthdayNull() {
                return this.IsNull(this.tableBL_Sampleinfo.birthdayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetbirthdayNull() {
                this[this.tableBL_Sampleinfo.birthdayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsmenopauseNull() {
                return this.IsNull(this.tableBL_Sampleinfo.menopauseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetmenopauseNull() {
                this[this.tableBL_Sampleinfo.menopauseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLMPDateNull() {
                return this.IsNull(this.tableBL_Sampleinfo.LMPDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLMPDateNull() {
                this[this.tableBL_Sampleinfo.LMPDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IscustomerCodeNull() {
                return this.IsNull(this.tableBL_Sampleinfo.customerCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetcustomerCodeNull() {
                this[this.tableBL_Sampleinfo.customerCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IscustomerNameNull() {
                return this.IsNull(this.tableBL_Sampleinfo.customerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetcustomerNameNull() {
                this[this.tableBL_Sampleinfo.customerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IspatientTypeNull() {
                return this.IsNull(this.tableBL_Sampleinfo.patientTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetpatientTypeNull() {
                this[this.tableBL_Sampleinfo.patientTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IspatientIdNull() {
                return this.IsNull(this.tableBL_Sampleinfo.patientIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetpatientIdNull() {
                this[this.tableBL_Sampleinfo.patientIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IswardCodeNull() {
                return this.IsNull(this.tableBL_Sampleinfo.wardCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetwardCodeNull() {
                this[this.tableBL_Sampleinfo.wardCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IswardNameNull() {
                return this.IsNull(this.tableBL_Sampleinfo.wardNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetwardNameNull() {
                this[this.tableBL_Sampleinfo.wardNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsbedNoNull() {
                return this.IsNull(this.tableBL_Sampleinfo.bedNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetbedNoNull() {
                this[this.tableBL_Sampleinfo.bedNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsdepartmentCodeNull() {
                return this.IsNull(this.tableBL_Sampleinfo.departmentCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetdepartmentCodeNull() {
                this[this.tableBL_Sampleinfo.departmentCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsdepartmentNameNull() {
                return this.IsNull(this.tableBL_Sampleinfo.departmentNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetdepartmentNameNull() {
                this[this.tableBL_Sampleinfo.departmentNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsdoctorIdNull() {
                return this.IsNull(this.tableBL_Sampleinfo.doctorIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetdoctorIdNull() {
                this[this.tableBL_Sampleinfo.doctorIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsdoctorNameNull() {
                return this.IsNull(this.tableBL_Sampleinfo.doctorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetdoctorNameNull() {
                this[this.tableBL_Sampleinfo.doctorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IscardNoNull() {
                return this.IsNull(this.tableBL_Sampleinfo.cardNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetcardNoNull() {
                this[this.tableBL_Sampleinfo.cardNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIDNumberNull() {
                return this.IsNull(this.tableBL_Sampleinfo.IDNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIDNumberNull() {
                this[this.tableBL_Sampleinfo.IDNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsmedicalInsuranceTypeNull() {
                return this.IsNull(this.tableBL_Sampleinfo.medicalInsuranceTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetmedicalInsuranceTypeNull() {
                this[this.tableBL_Sampleinfo.medicalInsuranceTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsmedicalInsuranceNoNull() {
                return this.IsNull(this.tableBL_Sampleinfo.medicalInsuranceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetmedicalInsuranceNoNull() {
                this[this.tableBL_Sampleinfo.medicalInsuranceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IscollectTimeNull() {
                return this.IsNull(this.tableBL_Sampleinfo.collectTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetcollectTimeNull() {
                this[this.tableBL_Sampleinfo.collectTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsreceiveTimeNull() {
                return this.IsNull(this.tableBL_Sampleinfo.receiveTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetreceiveTimeNull() {
                this[this.tableBL_Sampleinfo.receiveTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsmaritalStatusNull() {
                return this.IsNull(this.tableBL_Sampleinfo.maritalStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetmaritalStatusNull() {
                this[this.tableBL_Sampleinfo.maritalStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IstelphoneNoNull() {
                return this.IsNull(this.tableBL_Sampleinfo.telphoneNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SettelphoneNoNull() {
                this[this.tableBL_Sampleinfo.telphoneNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsaddressNull() {
                return this.IsNull(this.tableBL_Sampleinfo.addressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetaddressNull() {
                this[this.tableBL_Sampleinfo.addressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsdiagnosisNull() {
                return this.IsNull(this.tableBL_Sampleinfo.diagnosisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetdiagnosisNull() {
                this[this.tableBL_Sampleinfo.diagnosisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsregistrantNull() {
                return this.IsNull(this.tableBL_Sampleinfo.registrantColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetregistrantNull() {
                this[this.tableBL_Sampleinfo.registrantColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsregistrationTimeNull() {
                return this.IsNull(this.tableBL_Sampleinfo.registrationTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetregistrationTimeNull() {
                this[this.tableBL_Sampleinfo.registrationTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsmodifierNull() {
                return this.IsNull(this.tableBL_Sampleinfo.modifierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetmodifierNull() {
                this[this.tableBL_Sampleinfo.modifierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IscreaterNull() {
                return this.IsNull(this.tableBL_Sampleinfo.createrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetcreaterNull() {
                this[this.tableBL_Sampleinfo.createrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsfreezeFlagNull() {
                return this.IsNull(this.tableBL_Sampleinfo.freezeFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetfreezeFlagNull() {
                this[this.tableBL_Sampleinfo.freezeFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IscellaFlagNull() {
                return this.IsNull(this.tableBL_Sampleinfo.cellaFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetcellaFlagNull() {
                this[this.tableBL_Sampleinfo.cellaFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsspecimenNameNull() {
                return this.IsNull(this.tableBL_Sampleinfo.specimenNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetspecimenNameNull() {
                this[this.tableBL_Sampleinfo.specimenNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsspecimenTypeNull() {
                return this.IsNull(this.tableBL_Sampleinfo.specimenTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetspecimenTypeNull() {
                this[this.tableBL_Sampleinfo.specimenTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsspecimenNumberNull() {
                return this.IsNull(this.tableBL_Sampleinfo.specimenNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetspecimenNumberNull() {
                this[this.tableBL_Sampleinfo.specimenNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsspecimenQuantityNull() {
                return this.IsNull(this.tableBL_Sampleinfo.specimenQuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetspecimenQuantityNull() {
                this[this.tableBL_Sampleinfo.specimenQuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsunqualifiedReasonNull() {
                return this.IsNull(this.tableBL_Sampleinfo.unqualifiedReasonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetunqualifiedReasonNull() {
                this[this.tableBL_Sampleinfo.unqualifiedReasonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsflakingMethodNull() {
                return this.IsNull(this.tableBL_Sampleinfo.flakingMethodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetflakingMethodNull() {
                this[this.tableBL_Sampleinfo.flakingMethodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsremarkNull() {
                return this.IsNull(this.tableBL_Sampleinfo.remarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetremarkNull() {
                this[this.tableBL_Sampleinfo.remarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsreportTimeNull() {
                return this.IsNull(this.tableBL_Sampleinfo.reportTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetreportTimeNull() {
                this[this.tableBL_Sampleinfo.reportTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsdiagnosisDoctorNull() {
                return this.IsNull(this.tableBL_Sampleinfo.diagnosisDoctorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetdiagnosisDoctorNull() {
                this[this.tableBL_Sampleinfo.diagnosisDoctorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IscheckDoctorNull() {
                return this.IsNull(this.tableBL_Sampleinfo.checkDoctorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetcheckDoctorNull() {
                this[this.tableBL_Sampleinfo.checkDoctorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsverifierNull() {
                return this.IsNull(this.tableBL_Sampleinfo.verifierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetverifierNull() {
                this[this.tableBL_Sampleinfo.verifierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsscreeningManNull() {
                return this.IsNull(this.tableBL_Sampleinfo.screeningManColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetscreeningManNull() {
                this[this.tableBL_Sampleinfo.screeningManColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IssampleDoctorIdNull() {
                return this.IsNull(this.tableBL_Sampleinfo.sampleDoctorIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetsampleDoctorIdNull() {
                this[this.tableBL_Sampleinfo.sampleDoctorIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IssampleDoctorNameNull() {
                return this.IsNull(this.tableBL_Sampleinfo.sampleDoctorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetsampleDoctorNameNull() {
                this[this.tableBL_Sampleinfo.sampleDoctorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IssampleTimeNull() {
                return this.IsNull(this.tableBL_Sampleinfo.sampleTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetsampleTimeNull() {
                this[this.tableBL_Sampleinfo.sampleTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IssamplePartNull() {
                return this.IsNull(this.tableBL_Sampleinfo.samplePartColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetsamplePartNull() {
                this[this.tableBL_Sampleinfo.samplePartColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IscheckItemIdNull() {
                return this.IsNull(this.tableBL_Sampleinfo.checkItemIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetcheckItemIdNull() {
                this[this.tableBL_Sampleinfo.checkItemIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IscheckItemNameNull() {
                return this.IsNull(this.tableBL_Sampleinfo.checkItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetcheckItemNameNull() {
                this[this.tableBL_Sampleinfo.checkItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IscheckCountNull() {
                return this.IsNull(this.tableBL_Sampleinfo.checkCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetcheckCountNull() {
                this[this.tableBL_Sampleinfo.checkCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IspinyiCodeNull() {
                return this.IsNull(this.tableBL_Sampleinfo.pinyiCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetpinyiCodeNull() {
                this[this.tableBL_Sampleinfo.pinyiCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IswubiCodeNull() {
                return this.IsNull(this.tableBL_Sampleinfo.wubiCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetwubiCodeNull() {
                this[this.tableBL_Sampleinfo.wubiCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsresultXMLNull() {
                return this.IsNull(this.tableBL_Sampleinfo.resultXMLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetresultXMLNull() {
                this[this.tableBL_Sampleinfo.resultXMLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IssampleStatusNull() {
                return this.IsNull(this.tableBL_Sampleinfo.sampleStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetsampleStatusNull() {
                this[this.tableBL_Sampleinfo.sampleStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Issap_xsddNull() {
                return this.IsNull(this.tableBL_Sampleinfo.sap_xsddColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Setsap_xsddNull() {
                this[this.tableBL_Sampleinfo.sap_xsddColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Issap_xxmhNull() {
                return this.IsNull(this.tableBL_Sampleinfo.sap_xxmhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Setsap_xxmhNull() {
                this[this.tableBL_Sampleinfo.sap_xxmhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IspostscriptNull() {
                return this.IsNull(this.tableBL_Sampleinfo.postscriptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetpostscriptNull() {
                this[this.tableBL_Sampleinfo.postscriptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsfirstDoctorNull() {
                return this.IsNull(this.tableBL_Sampleinfo.firstDoctorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetfirstDoctorNull() {
                this[this.tableBL_Sampleinfo.firstDoctorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsapproveOfficerNull() {
                return this.IsNull(this.tableBL_Sampleinfo.approveOfficerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetapproveOfficerNull() {
                this[this.tableBL_Sampleinfo.approveOfficerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPrintTimeNull() {
                return this.IsNull(this.tableBL_Sampleinfo.PrintTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPrintTimeNull() {
                this[this.tableBL_Sampleinfo.PrintTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPrinterNull() {
                return this.IsNull(this.tableBL_Sampleinfo.PrinterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPrinterNull() {
                this[this.tableBL_Sampleinfo.PrinterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPrintMacNull() {
                return this.IsNull(this.tableBL_Sampleinfo.PrintMacColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPrintMacNull() {
                this[this.tableBL_Sampleinfo.PrintMacColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsdiseaseNameNull() {
                return this.IsNull(this.tableBL_Sampleinfo.diseaseNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetdiseaseNameNull() {
                this[this.tableBL_Sampleinfo.diseaseNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBaseCheckerNull() {
                return this.IsNull(this.tableBL_Sampleinfo.BaseCheckerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBaseCheckerNull() {
                this[this.tableBL_Sampleinfo.BaseCheckerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsneizhuNull() {
                return this.IsNull(this.tableBL_Sampleinfo.neizhuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetneizhuNull() {
                this[this.tableBL_Sampleinfo.neizhuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IssapTradeFlagNull() {
                return this.IsNull(this.tableBL_Sampleinfo.sapTradeFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetsapTradeFlagNull() {
                this[this.tableBL_Sampleinfo.sapTradeFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsprintTimesNull() {
                return this.IsNull(this.tableBL_Sampleinfo.printTimesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetprintTimesNull() {
                this[this.tableBL_Sampleinfo.printTimesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsmkbarcodeNull() {
                return this.IsNull(this.tableBL_Sampleinfo.mkbarcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetmkbarcodeNull() {
                this[this.tableBL_Sampleinfo.mkbarcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsmkprintflagNull() {
                return this.IsNull(this.tableBL_Sampleinfo.mkprintflagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetmkprintflagNull() {
                this[this.tableBL_Sampleinfo.mkprintflagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsistakeawayNull() {
                return this.IsNull(this.tableBL_Sampleinfo.istakeawayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetistakeawayNull() {
                this[this.tableBL_Sampleinfo.istakeawayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IssqrqNull() {
                return this.IsNull(this.tableBL_Sampleinfo.sqrqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetsqrqNull() {
                this[this.tableBL_Sampleinfo.sqrqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsoffBodyTimeNull() {
                return this.IsNull(this.tableBL_Sampleinfo.offBodyTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetoffBodyTimeNull() {
                this[this.tableBL_Sampleinfo.offBodyTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IstransDoctelNull() {
                return this.IsNull(this.tableBL_Sampleinfo.transDoctelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SettransDoctelNull() {
                this[this.tableBL_Sampleinfo.transDoctelColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class BL_SampleinfoRowChangeEvent : global::System.EventArgs {
            
            private BL_SampleinfoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public BL_SampleinfoRowChangeEvent(BL_SampleinfoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public BL_SampleinfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace reportview.MKPathologyDBDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BL_SampleinfoTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public BL_SampleinfoTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BL_Sampleinfo";
            tableMapping.ColumnMappings.Add("sampleId", "sampleId");
            tableMapping.ColumnMappings.Add("diseaseId", "diseaseId");
            tableMapping.ColumnMappings.Add("barcode", "barcode");
            tableMapping.ColumnMappings.Add("pathologyNo", "pathologyNo");
            tableMapping.ColumnMappings.Add("reportNo", "reportNo");
            tableMapping.ColumnMappings.Add("sampleNo", "sampleNo");
            tableMapping.ColumnMappings.Add("customerBarcode", "customerBarcode");
            tableMapping.ColumnMappings.Add("requestNo", "requestNo");
            tableMapping.ColumnMappings.Add("originalPathNo", "originalPathNo");
            tableMapping.ColumnMappings.Add("patientName", "patientName");
            tableMapping.ColumnMappings.Add("sex", "sex");
            tableMapping.ColumnMappings.Add("age", "age");
            tableMapping.ColumnMappings.Add("ageType", "ageType");
            tableMapping.ColumnMappings.Add("birthday", "birthday");
            tableMapping.ColumnMappings.Add("menopause", "menopause");
            tableMapping.ColumnMappings.Add("LMPDate", "LMPDate");
            tableMapping.ColumnMappings.Add("customerCode", "customerCode");
            tableMapping.ColumnMappings.Add("customerName", "customerName");
            tableMapping.ColumnMappings.Add("patientType", "patientType");
            tableMapping.ColumnMappings.Add("patientId", "patientId");
            tableMapping.ColumnMappings.Add("wardCode", "wardCode");
            tableMapping.ColumnMappings.Add("wardName", "wardName");
            tableMapping.ColumnMappings.Add("bedNo", "bedNo");
            tableMapping.ColumnMappings.Add("departmentCode", "departmentCode");
            tableMapping.ColumnMappings.Add("departmentName", "departmentName");
            tableMapping.ColumnMappings.Add("doctorId", "doctorId");
            tableMapping.ColumnMappings.Add("doctorName", "doctorName");
            tableMapping.ColumnMappings.Add("cardNo", "cardNo");
            tableMapping.ColumnMappings.Add("IDNumber", "IDNumber");
            tableMapping.ColumnMappings.Add("medicalInsuranceType", "medicalInsuranceType");
            tableMapping.ColumnMappings.Add("medicalInsuranceNo", "medicalInsuranceNo");
            tableMapping.ColumnMappings.Add("collectTime", "collectTime");
            tableMapping.ColumnMappings.Add("receiveTime", "receiveTime");
            tableMapping.ColumnMappings.Add("maritalStatus", "maritalStatus");
            tableMapping.ColumnMappings.Add("telphoneNo", "telphoneNo");
            tableMapping.ColumnMappings.Add("address", "address");
            tableMapping.ColumnMappings.Add("diagnosis", "diagnosis");
            tableMapping.ColumnMappings.Add("registrant", "registrant");
            tableMapping.ColumnMappings.Add("registrationTime", "registrationTime");
            tableMapping.ColumnMappings.Add("modifyTime", "modifyTime");
            tableMapping.ColumnMappings.Add("modifier", "modifier");
            tableMapping.ColumnMappings.Add("createTime", "createTime");
            tableMapping.ColumnMappings.Add("creater", "creater");
            tableMapping.ColumnMappings.Add("freezeFlag", "freezeFlag");
            tableMapping.ColumnMappings.Add("cellaFlag", "cellaFlag");
            tableMapping.ColumnMappings.Add("specimenName", "specimenName");
            tableMapping.ColumnMappings.Add("specimenType", "specimenType");
            tableMapping.ColumnMappings.Add("specimenNumber", "specimenNumber");
            tableMapping.ColumnMappings.Add("specimenQuantity", "specimenQuantity");
            tableMapping.ColumnMappings.Add("unqualifiedReason", "unqualifiedReason");
            tableMapping.ColumnMappings.Add("flakingMethod", "flakingMethod");
            tableMapping.ColumnMappings.Add("remark", "remark");
            tableMapping.ColumnMappings.Add("positiveFlag", "positiveFlag");
            tableMapping.ColumnMappings.Add("retakeFlag", "retakeFlag");
            tableMapping.ColumnMappings.Add("reportTime", "reportTime");
            tableMapping.ColumnMappings.Add("diagnosisDoctor", "diagnosisDoctor");
            tableMapping.ColumnMappings.Add("checkDoctor", "checkDoctor");
            tableMapping.ColumnMappings.Add("verifier", "verifier");
            tableMapping.ColumnMappings.Add("screeningMan", "screeningMan");
            tableMapping.ColumnMappings.Add("sampleDoctorId", "sampleDoctorId");
            tableMapping.ColumnMappings.Add("sampleDoctorName", "sampleDoctorName");
            tableMapping.ColumnMappings.Add("sampleTime", "sampleTime");
            tableMapping.ColumnMappings.Add("samplePart", "samplePart");
            tableMapping.ColumnMappings.Add("checkItemId", "checkItemId");
            tableMapping.ColumnMappings.Add("checkItemName", "checkItemName");
            tableMapping.ColumnMappings.Add("checkCount", "checkCount");
            tableMapping.ColumnMappings.Add("pinyiCode", "pinyiCode");
            tableMapping.ColumnMappings.Add("wubiCode", "wubiCode");
            tableMapping.ColumnMappings.Add("resultXML", "resultXML");
            tableMapping.ColumnMappings.Add("sampleStatus", "sampleStatus");
            tableMapping.ColumnMappings.Add("sap_xsdd", "sap_xsdd");
            tableMapping.ColumnMappings.Add("sap_xxmh", "sap_xxmh");
            tableMapping.ColumnMappings.Add("postscript", "postscript");
            tableMapping.ColumnMappings.Add("firstDoctor", "firstDoctor");
            tableMapping.ColumnMappings.Add("approveOfficer", "approveOfficer");
            tableMapping.ColumnMappings.Add("payType", "payType");
            tableMapping.ColumnMappings.Add("PrintTime", "PrintTime");
            tableMapping.ColumnMappings.Add("Printer", "Printer");
            tableMapping.ColumnMappings.Add("PrintMac", "PrintMac");
            tableMapping.ColumnMappings.Add("diseaseName", "diseaseName");
            tableMapping.ColumnMappings.Add("reportDoubleFlag", "reportDoubleFlag");
            tableMapping.ColumnMappings.Add("BaseChecker", "BaseChecker");
            tableMapping.ColumnMappings.Add("neizhu", "neizhu");
            tableMapping.ColumnMappings.Add("sapTradeFlag", "sapTradeFlag");
            tableMapping.ColumnMappings.Add("crisisFlag", "crisisFlag");
            tableMapping.ColumnMappings.Add("printTimes", "printTimes");
            tableMapping.ColumnMappings.Add("mkbarcode", "mkbarcode");
            tableMapping.ColumnMappings.Add("mkprintflag", "mkprintflag");
            tableMapping.ColumnMappings.Add("istakeaway", "istakeaway");
            tableMapping.ColumnMappings.Add("sqrq", "sqrq");
            tableMapping.ColumnMappings.Add("offBodyTime", "offBodyTime");
            tableMapping.ColumnMappings.Add("transDoctel", "transDoctel");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[BL_Sampleinfo] WHERE (([sampleId] = @Original_sampleId) AND ([" +
                "diseaseId] = @Original_diseaseId) AND ((@IsNull_barcode = 1 AND [barcode] IS NUL" +
                "L) OR ([barcode] = @Original_barcode)) AND ([pathologyNo] = @Original_pathologyN" +
                "o) AND ([reportNo] = @Original_reportNo) AND ([sampleNo] = @Original_sampleNo) A" +
                "ND ((@IsNull_customerBarcode = 1 AND [customerBarcode] IS NULL) OR ([customerBar" +
                "code] = @Original_customerBarcode)) AND ((@IsNull_requestNo = 1 AND [requestNo] " +
                "IS NULL) OR ([requestNo] = @Original_requestNo)) AND ((@IsNull_originalPathNo = " +
                "1 AND [originalPathNo] IS NULL) OR ([originalPathNo] = @Original_originalPathNo)" +
                ") AND ([patientName] = @Original_patientName) AND ((@IsNull_sex = 1 AND [sex] IS" +
                " NULL) OR ([sex] = @Original_sex)) AND ((@IsNull_age = 1 AND [age] IS NULL) OR (" +
                "[age] = @Original_age)) AND ((@IsNull_ageType = 1 AND [ageType] IS NULL) OR ([ag" +
                "eType] = @Original_ageType)) AND ((@IsNull_birthday = 1 AND [birthday] IS NULL) " +
                "OR ([birthday] = @Original_birthday)) AND ((@IsNull_menopause = 1 AND [menopause" +
                "] IS NULL) OR ([menopause] = @Original_menopause)) AND ((@IsNull_LMPDate = 1 AND" +
                " [LMPDate] IS NULL) OR ([LMPDate] = @Original_LMPDate)) AND ((@IsNull_customerCo" +
                "de = 1 AND [customerCode] IS NULL) OR ([customerCode] = @Original_customerCode))" +
                " AND ((@IsNull_customerName = 1 AND [customerName] IS NULL) OR ([customerName] =" +
                " @Original_customerName)) AND ((@IsNull_patientType = 1 AND [patientType] IS NUL" +
                "L) OR ([patientType] = @Original_patientType)) AND ((@IsNull_patientId = 1 AND [" +
                "patientId] IS NULL) OR ([patientId] = @Original_patientId)) AND ((@IsNull_wardCo" +
                "de = 1 AND [wardCode] IS NULL) OR ([wardCode] = @Original_wardCode)) AND ((@IsNu" +
                "ll_wardName = 1 AND [wardName] IS NULL) OR ([wardName] = @Original_wardName)) AN" +
                "D ((@IsNull_bedNo = 1 AND [bedNo] IS NULL) OR ([bedNo] = @Original_bedNo)) AND (" +
                "(@IsNull_departmentCode = 1 AND [departmentCode] IS NULL) OR ([departmentCode] =" +
                " @Original_departmentCode)) AND ((@IsNull_departmentName = 1 AND [departmentName" +
                "] IS NULL) OR ([departmentName] = @Original_departmentName)) AND ((@IsNull_docto" +
                "rId = 1 AND [doctorId] IS NULL) OR ([doctorId] = @Original_doctorId)) AND ((@IsN" +
                "ull_doctorName = 1 AND [doctorName] IS NULL) OR ([doctorName] = @Original_doctor" +
                "Name)) AND ((@IsNull_cardNo = 1 AND [cardNo] IS NULL) OR ([cardNo] = @Original_c" +
                "ardNo)) AND ((@IsNull_IDNumber = 1 AND [IDNumber] IS NULL) OR ([IDNumber] = @Ori" +
                "ginal_IDNumber)) AND ((@IsNull_medicalInsuranceType = 1 AND [medicalInsuranceTyp" +
                "e] IS NULL) OR ([medicalInsuranceType] = @Original_medicalInsuranceType)) AND ((" +
                "@IsNull_medicalInsuranceNo = 1 AND [medicalInsuranceNo] IS NULL) OR ([medicalIns" +
                "uranceNo] = @Original_medicalInsuranceNo)) AND ((@IsNull_collectTime = 1 AND [co" +
                "llectTime] IS NULL) OR ([collectTime] = @Original_collectTime)) AND ((@IsNull_re" +
                "ceiveTime = 1 AND [receiveTime] IS NULL) OR ([receiveTime] = @Original_receiveTi" +
                "me)) AND ((@IsNull_maritalStatus = 1 AND [maritalStatus] IS NULL) OR ([maritalSt" +
                "atus] = @Original_maritalStatus)) AND ((@IsNull_telphoneNo = 1 AND [telphoneNo] " +
                "IS NULL) OR ([telphoneNo] = @Original_telphoneNo)) AND ((@IsNull_address = 1 AND" +
                " [address] IS NULL) OR ([address] = @Original_address)) AND ((@IsNull_diagnosis " +
                "= 1 AND [diagnosis] IS NULL) OR ([diagnosis] = @Original_diagnosis)) AND ((@IsNu" +
                "ll_registrant = 1 AND [registrant] IS NULL) OR ([registrant] = @Original_registr" +
                "ant)) AND ((@IsNull_registrationTime = 1 AND [registrationTime] IS NULL) OR ([re" +
                "gistrationTime] = @Original_registrationTime)) AND ([modifyTime] = @Original_mod" +
                "ifyTime) AND ((@IsNull_modifier = 1 AND [modifier] IS NULL) OR ([modifier] = @Or" +
                "iginal_modifier)) AND ([createTime] = @Original_createTime) AND ((@IsNull_create" +
                "r = 1 AND [creater] IS NULL) OR ([creater] = @Original_creater)) AND ((@IsNull_f" +
                "reezeFlag = 1 AND [freezeFlag] IS NULL) OR ([freezeFlag] = @Original_freezeFlag)" +
                ") AND ((@IsNull_cellaFlag = 1 AND [cellaFlag] IS NULL) OR ([cellaFlag] = @Origin" +
                "al_cellaFlag)) AND ((@IsNull_specimenName = 1 AND [specimenName] IS NULL) OR ([s" +
                "pecimenName] = @Original_specimenName)) AND ((@IsNull_specimenType = 1 AND [spec" +
                "imenType] IS NULL) OR ([specimenType] = @Original_specimenType)) AND ((@IsNull_s" +
                "pecimenNumber = 1 AND [specimenNumber] IS NULL) OR ([specimenNumber] = @Original" +
                "_specimenNumber)) AND ((@IsNull_specimenQuantity = 1 AND [specimenQuantity] IS N" +
                "ULL) OR ([specimenQuantity] = @Original_specimenQuantity)) AND ((@IsNull_unquali" +
                "fiedReason = 1 AND [unqualifiedReason] IS NULL) OR ([unqualifiedReason] = @Origi" +
                "nal_unqualifiedReason)) AND ((@IsNull_flakingMethod = 1 AND [flakingMethod] IS N" +
                "ULL) OR ([flakingMethod] = @Original_flakingMethod)) AND ([positiveFlag] = @Orig" +
                "inal_positiveFlag) AND ([retakeFlag] = @Original_retakeFlag) AND ((@IsNull_repor" +
                "tTime = 1 AND [reportTime] IS NULL) OR ([reportTime] = @Original_reportTime)) AN" +
                "D ((@IsNull_diagnosisDoctor = 1 AND [diagnosisDoctor] IS NULL) OR ([diagnosisDoc" +
                "tor] = @Original_diagnosisDoctor)) AND ((@IsNull_checkDoctor = 1 AND [checkDocto" +
                "r] IS NULL) OR ([checkDoctor] = @Original_checkDoctor)) AND ((@IsNull_verifier =" +
                " 1 AND [verifier] IS NULL) OR ([verifier] = @Original_verifier)) AND ((@IsNull_s" +
                "creeningMan = 1 AND [screeningMan] IS NULL) OR ([screeningMan] = @Original_scree" +
                "ningMan)) AND ((@IsNull_sampleDoctorId = 1 AND [sampleDoctorId] IS NULL) OR ([sa" +
                "mpleDoctorId] = @Original_sampleDoctorId)) AND ((@IsNull_sampleDoctorName = 1 AN" +
                "D [sampleDoctorName] IS NULL) OR ([sampleDoctorName] = @Original_sampleDoctorNam" +
                "e)) AND ((@IsNull_sampleTime = 1 AND [sampleTime] IS NULL) OR ([sampleTime] = @O" +
                "riginal_sampleTime)) AND ((@IsNull_samplePart = 1 AND [samplePart] IS NULL) OR (" +
                "[samplePart] = @Original_samplePart)) AND ((@IsNull_checkItemId = 1 AND [checkIt" +
                "emId] IS NULL) OR ([checkItemId] = @Original_checkItemId)) AND ((@IsNull_checkCo" +
                "unt = 1 AND [checkCount] IS NULL) OR ([checkCount] = @Original_checkCount)) AND " +
                "((@IsNull_pinyiCode = 1 AND [pinyiCode] IS NULL) OR ([pinyiCode] = @Original_pin" +
                "yiCode)) AND ((@IsNull_wubiCode = 1 AND [wubiCode] IS NULL) OR ([wubiCode] = @Or" +
                "iginal_wubiCode)) AND ((@IsNull_sampleStatus = 1 AND [sampleStatus] IS NULL) OR " +
                "([sampleStatus] = @Original_sampleStatus)) AND ((@IsNull_sap_xsdd = 1 AND [sap_x" +
                "sdd] IS NULL) OR ([sap_xsdd] = @Original_sap_xsdd)) AND ((@IsNull_postscript = 1" +
                " AND [postscript] IS NULL) OR ([postscript] = @Original_postscript)) AND ((@IsNu" +
                "ll_firstDoctor = 1 AND [firstDoctor] IS NULL) OR ([firstDoctor] = @Original_firs" +
                "tDoctor)) AND ((@IsNull_approveOfficer = 1 AND [approveOfficer] IS NULL) OR ([ap" +
                "proveOfficer] = @Original_approveOfficer)) AND ([payType] = @Original_payType) A" +
                "ND ((@IsNull_PrintTime = 1 AND [PrintTime] IS NULL) OR ([PrintTime] = @Original_" +
                "PrintTime)) AND ((@IsNull_Printer = 1 AND [Printer] IS NULL) OR ([Printer] = @Or" +
                "iginal_Printer)) AND ((@IsNull_PrintMac = 1 AND [PrintMac] IS NULL) OR ([PrintMa" +
                "c] = @Original_PrintMac)) AND ((@IsNull_diseaseName = 1 AND [diseaseName] IS NUL" +
                "L) OR ([diseaseName] = @Original_diseaseName)) AND ([reportDoubleFlag] = @Origin" +
                "al_reportDoubleFlag) AND ((@IsNull_BaseChecker = 1 AND [BaseChecker] IS NULL) OR" +
                " ([BaseChecker] = @Original_BaseChecker)) AND ((@IsNull_sapTradeFlag = 1 AND [sa" +
                "pTradeFlag] IS NULL) OR ([sapTradeFlag] = @Original_sapTradeFlag)) AND ([crisisF" +
                "lag] = @Original_crisisFlag) AND ((@IsNull_printTimes = 1 AND [printTimes] IS NU" +
                "LL) OR ([printTimes] = @Original_printTimes)) AND ((@IsNull_mkbarcode = 1 AND [m" +
                "kbarcode] IS NULL) OR ([mkbarcode] = @Original_mkbarcode)) AND ((@IsNull_mkprint" +
                "flag = 1 AND [mkprintflag] IS NULL) OR ([mkprintflag] = @Original_mkprintflag)) " +
                "AND ((@IsNull_istakeaway = 1 AND [istakeaway] IS NULL) OR ([istakeaway] = @Origi" +
                "nal_istakeaway)) AND ((@IsNull_sqrq = 1 AND [sqrq] IS NULL) OR ([sqrq] = @Origin" +
                "al_sqrq)) AND ((@IsNull_offBodyTime = 1 AND [offBodyTime] IS NULL) OR ([offBodyT" +
                "ime] = @Original_offBodyTime)) AND ((@IsNull_transDoctel = 1 AND [transDoctel] I" +
                "S NULL) OR ([transDoctel] = @Original_transDoctel)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sampleId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "sampleId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_diseaseId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "diseaseId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_barcode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "barcode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_barcode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "barcode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_pathologyNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pathologyNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_reportNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reportNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sampleNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sampleNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_customerBarcode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "customerBarcode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_customerBarcode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "customerBarcode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_requestNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "requestNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_requestNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "requestNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_originalPathNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "originalPathNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_originalPathNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "originalPathNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_patientName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "patientName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_sex", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sex", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sex", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sex", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_age", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "age", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_age", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "age", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ageType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ageType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ageType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ageType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_birthday", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "birthday", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_birthday", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "birthday", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_menopause", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "menopause", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_menopause", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "menopause", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LMPDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LMPDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LMPDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LMPDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_customerCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "customerCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_customerCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "customerCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_customerName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "customerName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_customerName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "customerName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_patientType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "patientType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_patientType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "patientType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_patientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "patientId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_patientId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "patientId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_wardCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wardCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_wardCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wardCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_wardName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wardName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_wardName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wardName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_bedNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bedNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_bedNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bedNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_departmentCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "departmentCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_departmentCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "departmentCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_departmentName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "departmentName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_departmentName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "departmentName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_doctorId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "doctorId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_doctorId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "doctorId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_doctorName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "doctorName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_doctorName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "doctorName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_cardNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cardNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_cardNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cardNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IDNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IDNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_medicalInsuranceType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "medicalInsuranceType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_medicalInsuranceType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "medicalInsuranceType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_medicalInsuranceNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "medicalInsuranceNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_medicalInsuranceNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "medicalInsuranceNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_collectTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "collectTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_collectTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "collectTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_receiveTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "receiveTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_receiveTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "receiveTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_maritalStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "maritalStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_maritalStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "maritalStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_telphoneNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "telphoneNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_telphoneNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "telphoneNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_diagnosis", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "diagnosis", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_diagnosis", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "diagnosis", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_registrant", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "registrant", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_registrant", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "registrant", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_registrationTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "registrationTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_registrationTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "registrationTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_modifyTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "modifyTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_modifier", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "modifier", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_modifier", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "modifier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_createTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "createTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_creater", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "creater", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_creater", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "creater", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_freezeFlag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "freezeFlag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_freezeFlag", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "freezeFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_cellaFlag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cellaFlag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_cellaFlag", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cellaFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_specimenName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "specimenName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_specimenName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "specimenName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_specimenType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "specimenType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_specimenType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "specimenType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_specimenNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "specimenNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_specimenNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "specimenNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_specimenQuantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "specimenQuantity", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_specimenQuantity", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "specimenQuantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_unqualifiedReason", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "unqualifiedReason", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_unqualifiedReason", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "unqualifiedReason", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_flakingMethod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "flakingMethod", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_flakingMethod", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "flakingMethod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_positiveFlag", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "positiveFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_retakeFlag", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "retakeFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_reportTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reportTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_reportTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reportTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_diagnosisDoctor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "diagnosisDoctor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_diagnosisDoctor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "diagnosisDoctor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_checkDoctor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "checkDoctor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_checkDoctor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "checkDoctor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_verifier", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "verifier", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_verifier", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "verifier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_screeningMan", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "screeningMan", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_screeningMan", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "screeningMan", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_sampleDoctorId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sampleDoctorId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sampleDoctorId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sampleDoctorId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_sampleDoctorName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sampleDoctorName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sampleDoctorName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sampleDoctorName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_sampleTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sampleTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sampleTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sampleTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_samplePart", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "samplePart", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_samplePart", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "samplePart", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_checkItemId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "checkItemId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_checkItemId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "checkItemId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_checkCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "checkCount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_checkCount", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "checkCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_pinyiCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pinyiCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_pinyiCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pinyiCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_wubiCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wubiCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_wubiCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wubiCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_sampleStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sampleStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sampleStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sampleStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_sap_xsdd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sap_xsdd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sap_xsdd", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sap_xsdd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_postscript", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "postscript", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_postscript", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "postscript", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_firstDoctor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "firstDoctor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_firstDoctor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "firstDoctor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_approveOfficer", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "approveOfficer", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_approveOfficer", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "approveOfficer", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_payType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "payType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PrintTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrintTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Printer", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Printer", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Printer", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Printer", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PrintMac", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintMac", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrintMac", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintMac", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_diseaseName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "diseaseName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_diseaseName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "diseaseName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_reportDoubleFlag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reportDoubleFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BaseChecker", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BaseChecker", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BaseChecker", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BaseChecker", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_sapTradeFlag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sapTradeFlag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sapTradeFlag", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sapTradeFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_crisisFlag", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "crisisFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_printTimes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "printTimes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_printTimes", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "printTimes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_mkbarcode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mkbarcode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_mkbarcode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mkbarcode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_mkprintflag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mkprintflag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_mkprintflag", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mkprintflag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_istakeaway", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "istakeaway", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_istakeaway", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "istakeaway", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_sqrq", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sqrq", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sqrq", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sqrq", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_offBodyTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "offBodyTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_offBodyTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "offBodyTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_transDoctel", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "transDoctel", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_transDoctel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "transDoctel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[BL_Sampleinfo] ([diseaseId], [barcode], [pathologyNo], [report" +
                "No], [sampleNo], [customerBarcode], [requestNo], [originalPathNo], [patientName]" +
                ", [sex], [age], [ageType], [birthday], [menopause], [LMPDate], [customerCode], [" +
                "customerName], [patientType], [patientId], [wardCode], [wardName], [bedNo], [dep" +
                "artmentCode], [departmentName], [doctorId], [doctorName], [cardNo], [IDNumber], " +
                "[medicalInsuranceType], [medicalInsuranceNo], [collectTime], [receiveTime], [mar" +
                "italStatus], [telphoneNo], [address], [diagnosis], [registrant], [registrationTi" +
                "me], [modifyTime], [modifier], [createTime], [creater], [freezeFlag], [cellaFlag" +
                "], [specimenName], [specimenType], [specimenNumber], [specimenQuantity], [unqual" +
                "ifiedReason], [flakingMethod], [remark], [positiveFlag], [retakeFlag], [reportTi" +
                "me], [diagnosisDoctor], [checkDoctor], [verifier], [screeningMan], [sampleDoctor" +
                "Id], [sampleDoctorName], [sampleTime], [samplePart], [checkItemId], [checkItemNa" +
                "me], [checkCount], [pinyiCode], [wubiCode], [resultXML], [sampleStatus], [sap_xs" +
                "dd], [sap_xxmh], [postscript], [firstDoctor], [approveOfficer], [payType], [Prin" +
                "tTime], [Printer], [PrintMac], [diseaseName], [reportDoubleFlag], [BaseChecker]," +
                " [neizhu], [sapTradeFlag], [crisisFlag], [printTimes], [mkbarcode], [mkprintflag" +
                "], [istakeaway], [sqrq], [offBodyTime], [transDoctel]) VALUES (@diseaseId, @barc" +
                "ode, @pathologyNo, @reportNo, @sampleNo, @customerBarcode, @requestNo, @original" +
                "PathNo, @patientName, @sex, @age, @ageType, @birthday, @menopause, @LMPDate, @cu" +
                "stomerCode, @customerName, @patientType, @patientId, @wardCode, @wardName, @bedN" +
                "o, @departmentCode, @departmentName, @doctorId, @doctorName, @cardNo, @IDNumber," +
                " @medicalInsuranceType, @medicalInsuranceNo, @collectTime, @receiveTime, @marita" +
                "lStatus, @telphoneNo, @address, @diagnosis, @registrant, @registrationTime, @mod" +
                "ifyTime, @modifier, @createTime, @creater, @freezeFlag, @cellaFlag, @specimenNam" +
                "e, @specimenType, @specimenNumber, @specimenQuantity, @unqualifiedReason, @flaki" +
                "ngMethod, @remark, @positiveFlag, @retakeFlag, @reportTime, @diagnosisDoctor, @c" +
                "heckDoctor, @verifier, @screeningMan, @sampleDoctorId, @sampleDoctorName, @sampl" +
                "eTime, @samplePart, @checkItemId, @checkItemName, @checkCount, @pinyiCode, @wubi" +
                "Code, @resultXML, @sampleStatus, @sap_xsdd, @sap_xxmh, @postscript, @firstDoctor" +
                ", @approveOfficer, @payType, @PrintTime, @Printer, @PrintMac, @diseaseName, @rep" +
                "ortDoubleFlag, @BaseChecker, @neizhu, @sapTradeFlag, @crisisFlag, @printTimes, @" +
                "mkbarcode, @mkprintflag, @istakeaway, @sqrq, @offBodyTime, @transDoctel);\r\nSELEC" +
                "T sampleId, diseaseId, barcode, pathologyNo, reportNo, sampleNo, customerBarcode" +
                ", requestNo, originalPathNo, patientName, sex, age, ageType, birthday, menopause" +
                ", LMPDate, customerCode, customerName, patientType, patientId, wardCode, wardNam" +
                "e, bedNo, departmentCode, departmentName, doctorId, doctorName, cardNo, IDNumber" +
                ", medicalInsuranceType, medicalInsuranceNo, collectTime, receiveTime, maritalSta" +
                "tus, telphoneNo, address, diagnosis, registrant, registrationTime, modifyTime, m" +
                "odifier, createTime, creater, freezeFlag, cellaFlag, specimenName, specimenType," +
                " specimenNumber, specimenQuantity, unqualifiedReason, flakingMethod, remark, pos" +
                "itiveFlag, retakeFlag, reportTime, diagnosisDoctor, checkDoctor, verifier, scree" +
                "ningMan, sampleDoctorId, sampleDoctorName, sampleTime, samplePart, checkItemId, " +
                "checkItemName, checkCount, pinyiCode, wubiCode, resultXML, sampleStatus, sap_xsd" +
                "d, sap_xxmh, postscript, firstDoctor, approveOfficer, payType, PrintTime, Printe" +
                "r, PrintMac, diseaseName, reportDoubleFlag, BaseChecker, neizhu, sapTradeFlag, c" +
                "risisFlag, printTimes, mkbarcode, mkprintflag, istakeaway, sqrq, offBodyTime, tr" +
                "ansDoctel FROM BL_Sampleinfo WHERE (sampleId = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@diseaseId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "diseaseId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@barcode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "barcode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pathologyNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pathologyNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@reportNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reportNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sampleNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sampleNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@customerBarcode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "customerBarcode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@requestNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "requestNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@originalPathNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "originalPathNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@patientName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "patientName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sex", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@age", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "age", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ageType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ageType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@birthday", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "birthday", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@menopause", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "menopause", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LMPDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LMPDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@customerCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "customerCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@customerName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "customerName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@patientType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "patientType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@patientId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "patientId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@wardCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wardCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@wardName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wardName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bedNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bedNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@departmentCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "departmentCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@departmentName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "departmentName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@doctorId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "doctorId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@doctorName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "doctorName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cardNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cardNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IDNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@medicalInsuranceType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "medicalInsuranceType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@medicalInsuranceNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "medicalInsuranceNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@collectTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "collectTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@receiveTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "receiveTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@maritalStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "maritalStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@telphoneNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "telphoneNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@diagnosis", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "diagnosis", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@registrant", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "registrant", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@registrationTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "registrationTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@modifyTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "modifyTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@modifier", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "modifier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@createTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "createTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@creater", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "creater", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@freezeFlag", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "freezeFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cellaFlag", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cellaFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@specimenName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "specimenName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@specimenType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "specimenType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@specimenNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "specimenNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@specimenQuantity", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "specimenQuantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@unqualifiedReason", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "unqualifiedReason", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@flakingMethod", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "flakingMethod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@remark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@positiveFlag", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "positiveFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@retakeFlag", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "retakeFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@reportTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reportTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@diagnosisDoctor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "diagnosisDoctor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@checkDoctor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "checkDoctor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@verifier", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "verifier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@screeningMan", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "screeningMan", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sampleDoctorId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sampleDoctorId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sampleDoctorName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sampleDoctorName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sampleTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sampleTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@samplePart", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "samplePart", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@checkItemId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "checkItemId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@checkItemName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "checkItemName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@checkCount", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "checkCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pinyiCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pinyiCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@wubiCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wubiCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@resultXML", global::System.Data.SqlDbType.Xml, 0, global::System.Data.ParameterDirection.Input, 0, 0, "resultXML", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sampleStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sampleStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sap_xsdd", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sap_xsdd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sap_xxmh", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sap_xxmh", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@postscript", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "postscript", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@firstDoctor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "firstDoctor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@approveOfficer", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "approveOfficer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@payType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "payType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrintTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Printer", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Printer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrintMac", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintMac", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@diseaseName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "diseaseName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@reportDoubleFlag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reportDoubleFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BaseChecker", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BaseChecker", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@neizhu", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "neizhu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sapTradeFlag", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sapTradeFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@crisisFlag", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "crisisFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@printTimes", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "printTimes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mkbarcode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mkbarcode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mkprintflag", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mkprintflag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@istakeaway", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "istakeaway", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sqrq", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sqrq", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@offBodyTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "offBodyTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@transDoctel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "transDoctel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[BL_Sampleinfo] SET [diseaseId] = @diseaseId, [barcode] = @barcode, " +
                "[pathologyNo] = @pathologyNo, [reportNo] = @reportNo, [sampleNo] = @sampleNo, [c" +
                "ustomerBarcode] = @customerBarcode, [requestNo] = @requestNo, [originalPathNo] =" +
                " @originalPathNo, [patientName] = @patientName, [sex] = @sex, [age] = @age, [age" +
                "Type] = @ageType, [birthday] = @birthday, [menopause] = @menopause, [LMPDate] = " +
                "@LMPDate, [customerCode] = @customerCode, [customerName] = @customerName, [patie" +
                "ntType] = @patientType, [patientId] = @patientId, [wardCode] = @wardCode, [wardN" +
                "ame] = @wardName, [bedNo] = @bedNo, [departmentCode] = @departmentCode, [departm" +
                "entName] = @departmentName, [doctorId] = @doctorId, [doctorName] = @doctorName, " +
                "[cardNo] = @cardNo, [IDNumber] = @IDNumber, [medicalInsuranceType] = @medicalIns" +
                "uranceType, [medicalInsuranceNo] = @medicalInsuranceNo, [collectTime] = @collect" +
                "Time, [receiveTime] = @receiveTime, [maritalStatus] = @maritalStatus, [telphoneN" +
                "o] = @telphoneNo, [address] = @address, [diagnosis] = @diagnosis, [registrant] =" +
                " @registrant, [registrationTime] = @registrationTime, [modifyTime] = @modifyTime" +
                ", [modifier] = @modifier, [createTime] = @createTime, [creater] = @creater, [fre" +
                "ezeFlag] = @freezeFlag, [cellaFlag] = @cellaFlag, [specimenName] = @specimenName" +
                ", [specimenType] = @specimenType, [specimenNumber] = @specimenNumber, [specimenQ" +
                "uantity] = @specimenQuantity, [unqualifiedReason] = @unqualifiedReason, [flaking" +
                "Method] = @flakingMethod, [remark] = @remark, [positiveFlag] = @positiveFlag, [r" +
                "etakeFlag] = @retakeFlag, [reportTime] = @reportTime, [diagnosisDoctor] = @diagn" +
                "osisDoctor, [checkDoctor] = @checkDoctor, [verifier] = @verifier, [screeningMan]" +
                " = @screeningMan, [sampleDoctorId] = @sampleDoctorId, [sampleDoctorName] = @samp" +
                "leDoctorName, [sampleTime] = @sampleTime, [samplePart] = @samplePart, [checkItem" +
                "Id] = @checkItemId, [checkItemName] = @checkItemName, [checkCount] = @checkCount" +
                ", [pinyiCode] = @pinyiCode, [wubiCode] = @wubiCode, [resultXML] = @resultXML, [s" +
                "ampleStatus] = @sampleStatus, [sap_xsdd] = @sap_xsdd, [sap_xxmh] = @sap_xxmh, [p" +
                "ostscript] = @postscript, [firstDoctor] = @firstDoctor, [approveOfficer] = @appr" +
                "oveOfficer, [payType] = @payType, [PrintTime] = @PrintTime, [Printer] = @Printer" +
                ", [PrintMac] = @PrintMac, [diseaseName] = @diseaseName, [reportDoubleFlag] = @re" +
                "portDoubleFlag, [BaseChecker] = @BaseChecker, [neizhu] = @neizhu, [sapTradeFlag]" +
                " = @sapTradeFlag, [crisisFlag] = @crisisFlag, [printTimes] = @printTimes, [mkbar" +
                "code] = @mkbarcode, [mkprintflag] = @mkprintflag, [istakeaway] = @istakeaway, [s" +
                "qrq] = @sqrq, [offBodyTime] = @offBodyTime, [transDoctel] = @transDoctel WHERE (" +
                "([sampleId] = @Original_sampleId) AND ([diseaseId] = @Original_diseaseId) AND ((" +
                "@IsNull_barcode = 1 AND [barcode] IS NULL) OR ([barcode] = @Original_barcode)) A" +
                "ND ([pathologyNo] = @Original_pathologyNo) AND ([reportNo] = @Original_reportNo)" +
                " AND ([sampleNo] = @Original_sampleNo) AND ((@IsNull_customerBarcode = 1 AND [cu" +
                "stomerBarcode] IS NULL) OR ([customerBarcode] = @Original_customerBarcode)) AND " +
                "((@IsNull_requestNo = 1 AND [requestNo] IS NULL) OR ([requestNo] = @Original_req" +
                "uestNo)) AND ((@IsNull_originalPathNo = 1 AND [originalPathNo] IS NULL) OR ([ori" +
                "ginalPathNo] = @Original_originalPathNo)) AND ([patientName] = @Original_patient" +
                "Name) AND ((@IsNull_sex = 1 AND [sex] IS NULL) OR ([sex] = @Original_sex)) AND (" +
                "(@IsNull_age = 1 AND [age] IS NULL) OR ([age] = @Original_age)) AND ((@IsNull_ag" +
                "eType = 1 AND [ageType] IS NULL) OR ([ageType] = @Original_ageType)) AND ((@IsNu" +
                "ll_birthday = 1 AND [birthday] IS NULL) OR ([birthday] = @Original_birthday)) AN" +
                "D ((@IsNull_menopause = 1 AND [menopause] IS NULL) OR ([menopause] = @Original_m" +
                "enopause)) AND ((@IsNull_LMPDate = 1 AND [LMPDate] IS NULL) OR ([LMPDate] = @Ori" +
                "ginal_LMPDate)) AND ((@IsNull_customerCode = 1 AND [customerCode] IS NULL) OR ([" +
                "customerCode] = @Original_customerCode)) AND ((@IsNull_customerName = 1 AND [cus" +
                "tomerName] IS NULL) OR ([customerName] = @Original_customerName)) AND ((@IsNull_" +
                "patientType = 1 AND [patientType] IS NULL) OR ([patientType] = @Original_patient" +
                "Type)) AND ((@IsNull_patientId = 1 AND [patientId] IS NULL) OR ([patientId] = @O" +
                "riginal_patientId)) AND ((@IsNull_wardCode = 1 AND [wardCode] IS NULL) OR ([ward" +
                "Code] = @Original_wardCode)) AND ((@IsNull_wardName = 1 AND [wardName] IS NULL) " +
                "OR ([wardName] = @Original_wardName)) AND ((@IsNull_bedNo = 1 AND [bedNo] IS NUL" +
                "L) OR ([bedNo] = @Original_bedNo)) AND ((@IsNull_departmentCode = 1 AND [departm" +
                "entCode] IS NULL) OR ([departmentCode] = @Original_departmentCode)) AND ((@IsNul" +
                "l_departmentName = 1 AND [departmentName] IS NULL) OR ([departmentName] = @Origi" +
                "nal_departmentName)) AND ((@IsNull_doctorId = 1 AND [doctorId] IS NULL) OR ([doc" +
                "torId] = @Original_doctorId)) AND ((@IsNull_doctorName = 1 AND [doctorName] IS N" +
                "ULL) OR ([doctorName] = @Original_doctorName)) AND ((@IsNull_cardNo = 1 AND [car" +
                "dNo] IS NULL) OR ([cardNo] = @Original_cardNo)) AND ((@IsNull_IDNumber = 1 AND [" +
                "IDNumber] IS NULL) OR ([IDNumber] = @Original_IDNumber)) AND ((@IsNull_medicalIn" +
                "suranceType = 1 AND [medicalInsuranceType] IS NULL) OR ([medicalInsuranceType] =" +
                " @Original_medicalInsuranceType)) AND ((@IsNull_medicalInsuranceNo = 1 AND [medi" +
                "calInsuranceNo] IS NULL) OR ([medicalInsuranceNo] = @Original_medicalInsuranceNo" +
                ")) AND ((@IsNull_collectTime = 1 AND [collectTime] IS NULL) OR ([collectTime] = " +
                "@Original_collectTime)) AND ((@IsNull_receiveTime = 1 AND [receiveTime] IS NULL)" +
                " OR ([receiveTime] = @Original_receiveTime)) AND ((@IsNull_maritalStatus = 1 AND" +
                " [maritalStatus] IS NULL) OR ([maritalStatus] = @Original_maritalStatus)) AND ((" +
                "@IsNull_telphoneNo = 1 AND [telphoneNo] IS NULL) OR ([telphoneNo] = @Original_te" +
                "lphoneNo)) AND ((@IsNull_address = 1 AND [address] IS NULL) OR ([address] = @Ori" +
                "ginal_address)) AND ((@IsNull_diagnosis = 1 AND [diagnosis] IS NULL) OR ([diagno" +
                "sis] = @Original_diagnosis)) AND ((@IsNull_registrant = 1 AND [registrant] IS NU" +
                "LL) OR ([registrant] = @Original_registrant)) AND ((@IsNull_registrationTime = 1" +
                " AND [registrationTime] IS NULL) OR ([registrationTime] = @Original_registration" +
                "Time)) AND ([modifyTime] = @Original_modifyTime) AND ((@IsNull_modifier = 1 AND " +
                "[modifier] IS NULL) OR ([modifier] = @Original_modifier)) AND ([createTime] = @O" +
                "riginal_createTime) AND ((@IsNull_creater = 1 AND [creater] IS NULL) OR ([create" +
                "r] = @Original_creater)) AND ((@IsNull_freezeFlag = 1 AND [freezeFlag] IS NULL) " +
                "OR ([freezeFlag] = @Original_freezeFlag)) AND ((@IsNull_cellaFlag = 1 AND [cella" +
                "Flag] IS NULL) OR ([cellaFlag] = @Original_cellaFlag)) AND ((@IsNull_specimenNam" +
                "e = 1 AND [specimenName] IS NULL) OR ([specimenName] = @Original_specimenName)) " +
                "AND ((@IsNull_specimenType = 1 AND [specimenType] IS NULL) OR ([specimenType] = " +
                "@Original_specimenType)) AND ((@IsNull_specimenNumber = 1 AND [specimenNumber] I" +
                "S NULL) OR ([specimenNumber] = @Original_specimenNumber)) AND ((@IsNull_specimen" +
                "Quantity = 1 AND [specimenQuantity] IS NULL) OR ([specimenQuantity] = @Original_" +
                "specimenQuantity)) AND ((@IsNull_unqualifiedReason = 1 AND [unqualifiedReason] I" +
                "S NULL) OR ([unqualifiedReason] = @Original_unqualifiedReason)) AND ((@IsNull_fl" +
                "akingMethod = 1 AND [flakingMethod] IS NULL) OR ([flakingMethod] = @Original_fla" +
                "kingMethod)) AND ([positiveFlag] = @Original_positiveFlag) AND ([retakeFlag] = @" +
                "Original_retakeFlag) AND ((@IsNull_reportTime = 1 AND [reportTime] IS NULL) OR (" +
                "[reportTime] = @Original_reportTime)) AND ((@IsNull_diagnosisDoctor = 1 AND [dia" +
                "gnosisDoctor] IS NULL) OR ([diagnosisDoctor] = @Original_diagnosisDoctor)) AND (" +
                "(@IsNull_checkDoctor = 1 AND [checkDoctor] IS NULL) OR ([checkDoctor] = @Origina" +
                "l_checkDoctor)) AND ((@IsNull_verifier = 1 AND [verifier] IS NULL) OR ([verifier" +
                "] = @Original_verifier)) AND ((@IsNull_screeningMan = 1 AND [screeningMan] IS NU" +
                "LL) OR ([screeningMan] = @Original_screeningMan)) AND ((@IsNull_sampleDoctorId =" +
                " 1 AND [sampleDoctorId] IS NULL) OR ([sampleDoctorId] = @Original_sampleDoctorId" +
                ")) AND ((@IsNull_sampleDoctorName = 1 AND [sampleDoctorName] IS NULL) OR ([sampl" +
                "eDoctorName] = @Original_sampleDoctorName)) AND ((@IsNull_sampleTime = 1 AND [sa" +
                "mpleTime] IS NULL) OR ([sampleTime] = @Original_sampleTime)) AND ((@IsNull_sampl" +
                "ePart = 1 AND [samplePart] IS NULL) OR ([samplePart] = @Original_samplePart)) AN" +
                "D ((@IsNull_checkItemId = 1 AND [checkItemId] IS NULL) OR ([checkItemId] = @Orig" +
                "inal_checkItemId)) AND ((@IsNull_checkCount = 1 AND [checkCount] IS NULL) OR ([c" +
                "heckCount] = @Original_checkCount)) AND ((@IsNull_pinyiCode = 1 AND [pinyiCode] " +
                "IS NULL) OR ([pinyiCode] = @Original_pinyiCode)) AND ((@IsNull_wubiCode = 1 AND " +
                "[wubiCode] IS NULL) OR ([wubiCode] = @Original_wubiCode)) AND ((@IsNull_sampleSt" +
                "atus = 1 AND [sampleStatus] IS NULL) OR ([sampleStatus] = @Original_sampleStatus" +
                ")) AND ((@IsNull_sap_xsdd = 1 AND [sap_xsdd] IS NULL) OR ([sap_xsdd] = @Original" +
                "_sap_xsdd)) AND ((@IsNull_postscript = 1 AND [postscript] IS NULL) OR ([postscri" +
                "pt] = @Original_postscript)) AND ((@IsNull_firstDoctor = 1 AND [firstDoctor] IS " +
                "NULL) OR ([firstDoctor] = @Original_firstDoctor)) AND ((@IsNull_approveOfficer =" +
                " 1 AND [approveOfficer] IS NULL) OR ([approveOfficer] = @Original_approveOfficer" +
                ")) AND ([payType] = @Original_payType) AND ((@IsNull_PrintTime = 1 AND [PrintTim" +
                "e] IS NULL) OR ([PrintTime] = @Original_PrintTime)) AND ((@IsNull_Printer = 1 AN" +
                "D [Printer] IS NULL) OR ([Printer] = @Original_Printer)) AND ((@IsNull_PrintMac " +
                "= 1 AND [PrintMac] IS NULL) OR ([PrintMac] = @Original_PrintMac)) AND ((@IsNull_" +
                "diseaseName = 1 AND [diseaseName] IS NULL) OR ([diseaseName] = @Original_disease" +
                "Name)) AND ([reportDoubleFlag] = @Original_reportDoubleFlag) AND ((@IsNull_BaseC" +
                "hecker = 1 AND [BaseChecker] IS NULL) OR ([BaseChecker] = @Original_BaseChecker)" +
                ") AND ((@IsNull_sapTradeFlag = 1 AND [sapTradeFlag] IS NULL) OR ([sapTradeFlag] " +
                "= @Original_sapTradeFlag)) AND ([crisisFlag] = @Original_crisisFlag) AND ((@IsNu" +
                "ll_printTimes = 1 AND [printTimes] IS NULL) OR ([printTimes] = @Original_printTi" +
                "mes)) AND ((@IsNull_mkbarcode = 1 AND [mkbarcode] IS NULL) OR ([mkbarcode] = @Or" +
                "iginal_mkbarcode)) AND ((@IsNull_mkprintflag = 1 AND [mkprintflag] IS NULL) OR (" +
                "[mkprintflag] = @Original_mkprintflag)) AND ((@IsNull_istakeaway = 1 AND [istake" +
                "away] IS NULL) OR ([istakeaway] = @Original_istakeaway)) AND ((@IsNull_sqrq = 1 " +
                "AND [sqrq] IS NULL) OR ([sqrq] = @Original_sqrq)) AND ((@IsNull_offBodyTime = 1 " +
                "AND [offBodyTime] IS NULL) OR ([offBodyTime] = @Original_offBodyTime)) AND ((@Is" +
                "Null_transDoctel = 1 AND [transDoctel] IS NULL) OR ([transDoctel] = @Original_tr" +
                "ansDoctel)));\r\nSELECT sampleId, diseaseId, barcode, pathologyNo, reportNo, sampl" +
                "eNo, customerBarcode, requestNo, originalPathNo, patientName, sex, age, ageType," +
                " birthday, menopause, LMPDate, customerCode, customerName, patientType, patientI" +
                "d, wardCode, wardName, bedNo, departmentCode, departmentName, doctorId, doctorNa" +
                "me, cardNo, IDNumber, medicalInsuranceType, medicalInsuranceNo, collectTime, rec" +
                "eiveTime, maritalStatus, telphoneNo, address, diagnosis, registrant, registratio" +
                "nTime, modifyTime, modifier, createTime, creater, freezeFlag, cellaFlag, specime" +
                "nName, specimenType, specimenNumber, specimenQuantity, unqualifiedReason, flakin" +
                "gMethod, remark, positiveFlag, retakeFlag, reportTime, diagnosisDoctor, checkDoc" +
                "tor, verifier, screeningMan, sampleDoctorId, sampleDoctorName, sampleTime, sampl" +
                "ePart, checkItemId, checkItemName, checkCount, pinyiCode, wubiCode, resultXML, s" +
                "ampleStatus, sap_xsdd, sap_xxmh, postscript, firstDoctor, approveOfficer, payTyp" +
                "e, PrintTime, Printer, PrintMac, diseaseName, reportDoubleFlag, BaseChecker, nei" +
                "zhu, sapTradeFlag, crisisFlag, printTimes, mkbarcode, mkprintflag, istakeaway, s" +
                "qrq, offBodyTime, transDoctel FROM BL_Sampleinfo WHERE (sampleId = @sampleId)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@diseaseId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "diseaseId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@barcode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "barcode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pathologyNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pathologyNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@reportNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reportNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sampleNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sampleNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@customerBarcode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "customerBarcode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@requestNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "requestNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@originalPathNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "originalPathNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@patientName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "patientName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sex", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@age", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "age", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ageType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ageType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@birthday", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "birthday", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@menopause", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "menopause", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LMPDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LMPDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@customerCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "customerCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@customerName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "customerName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@patientType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "patientType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@patientId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "patientId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@wardCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wardCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@wardName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wardName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bedNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bedNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@departmentCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "departmentCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@departmentName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "departmentName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@doctorId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "doctorId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@doctorName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "doctorName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cardNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cardNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IDNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@medicalInsuranceType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "medicalInsuranceType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@medicalInsuranceNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "medicalInsuranceNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@collectTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "collectTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@receiveTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "receiveTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@maritalStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "maritalStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@telphoneNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "telphoneNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@diagnosis", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "diagnosis", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@registrant", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "registrant", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@registrationTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "registrationTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@modifyTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "modifyTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@modifier", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "modifier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@createTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "createTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@creater", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "creater", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@freezeFlag", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "freezeFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cellaFlag", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cellaFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@specimenName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "specimenName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@specimenType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "specimenType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@specimenNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "specimenNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@specimenQuantity", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "specimenQuantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@unqualifiedReason", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "unqualifiedReason", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@flakingMethod", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "flakingMethod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@remark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@positiveFlag", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "positiveFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@retakeFlag", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "retakeFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@reportTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reportTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@diagnosisDoctor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "diagnosisDoctor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@checkDoctor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "checkDoctor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@verifier", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "verifier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@screeningMan", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "screeningMan", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sampleDoctorId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sampleDoctorId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sampleDoctorName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sampleDoctorName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sampleTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sampleTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@samplePart", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "samplePart", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@checkItemId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "checkItemId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@checkItemName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "checkItemName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@checkCount", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "checkCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pinyiCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pinyiCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@wubiCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wubiCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@resultXML", global::System.Data.SqlDbType.Xml, 0, global::System.Data.ParameterDirection.Input, 0, 0, "resultXML", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sampleStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sampleStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sap_xsdd", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sap_xsdd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sap_xxmh", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sap_xxmh", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@postscript", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "postscript", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@firstDoctor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "firstDoctor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@approveOfficer", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "approveOfficer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@payType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "payType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrintTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Printer", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Printer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrintMac", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintMac", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@diseaseName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "diseaseName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@reportDoubleFlag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reportDoubleFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BaseChecker", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BaseChecker", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@neizhu", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "neizhu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sapTradeFlag", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sapTradeFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@crisisFlag", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "crisisFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@printTimes", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "printTimes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mkbarcode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mkbarcode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mkprintflag", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mkprintflag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@istakeaway", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "istakeaway", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sqrq", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sqrq", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@offBodyTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "offBodyTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@transDoctel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "transDoctel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sampleId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "sampleId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_diseaseId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "diseaseId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_barcode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "barcode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_barcode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "barcode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_pathologyNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pathologyNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_reportNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reportNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sampleNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sampleNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_customerBarcode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "customerBarcode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_customerBarcode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "customerBarcode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_requestNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "requestNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_requestNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "requestNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_originalPathNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "originalPathNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_originalPathNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "originalPathNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_patientName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "patientName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_sex", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sex", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sex", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sex", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_age", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "age", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_age", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "age", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ageType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ageType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ageType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ageType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_birthday", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "birthday", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_birthday", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "birthday", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_menopause", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "menopause", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_menopause", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "menopause", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LMPDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LMPDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LMPDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LMPDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_customerCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "customerCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_customerCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "customerCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_customerName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "customerName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_customerName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "customerName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_patientType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "patientType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_patientType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "patientType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_patientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "patientId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_patientId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "patientId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_wardCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wardCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_wardCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wardCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_wardName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wardName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_wardName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wardName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_bedNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bedNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_bedNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bedNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_departmentCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "departmentCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_departmentCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "departmentCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_departmentName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "departmentName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_departmentName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "departmentName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_doctorId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "doctorId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_doctorId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "doctorId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_doctorName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "doctorName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_doctorName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "doctorName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_cardNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cardNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_cardNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cardNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IDNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IDNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_medicalInsuranceType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "medicalInsuranceType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_medicalInsuranceType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "medicalInsuranceType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_medicalInsuranceNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "medicalInsuranceNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_medicalInsuranceNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "medicalInsuranceNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_collectTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "collectTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_collectTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "collectTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_receiveTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "receiveTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_receiveTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "receiveTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_maritalStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "maritalStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_maritalStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "maritalStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_telphoneNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "telphoneNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_telphoneNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "telphoneNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_diagnosis", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "diagnosis", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_diagnosis", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "diagnosis", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_registrant", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "registrant", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_registrant", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "registrant", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_registrationTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "registrationTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_registrationTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "registrationTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_modifyTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "modifyTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_modifier", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "modifier", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_modifier", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "modifier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_createTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "createTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_creater", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "creater", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_creater", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "creater", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_freezeFlag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "freezeFlag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_freezeFlag", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "freezeFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_cellaFlag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cellaFlag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_cellaFlag", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cellaFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_specimenName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "specimenName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_specimenName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "specimenName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_specimenType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "specimenType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_specimenType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "specimenType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_specimenNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "specimenNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_specimenNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "specimenNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_specimenQuantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "specimenQuantity", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_specimenQuantity", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "specimenQuantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_unqualifiedReason", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "unqualifiedReason", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_unqualifiedReason", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "unqualifiedReason", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_flakingMethod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "flakingMethod", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_flakingMethod", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "flakingMethod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_positiveFlag", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "positiveFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_retakeFlag", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "retakeFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_reportTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reportTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_reportTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reportTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_diagnosisDoctor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "diagnosisDoctor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_diagnosisDoctor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "diagnosisDoctor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_checkDoctor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "checkDoctor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_checkDoctor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "checkDoctor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_verifier", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "verifier", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_verifier", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "verifier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_screeningMan", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "screeningMan", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_screeningMan", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "screeningMan", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_sampleDoctorId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sampleDoctorId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sampleDoctorId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sampleDoctorId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_sampleDoctorName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sampleDoctorName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sampleDoctorName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sampleDoctorName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_sampleTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sampleTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sampleTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sampleTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_samplePart", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "samplePart", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_samplePart", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "samplePart", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_checkItemId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "checkItemId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_checkItemId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "checkItemId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_checkCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "checkCount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_checkCount", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "checkCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_pinyiCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pinyiCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_pinyiCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pinyiCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_wubiCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wubiCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_wubiCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wubiCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_sampleStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sampleStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sampleStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sampleStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_sap_xsdd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sap_xsdd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sap_xsdd", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sap_xsdd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_postscript", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "postscript", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_postscript", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "postscript", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_firstDoctor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "firstDoctor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_firstDoctor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "firstDoctor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_approveOfficer", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "approveOfficer", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_approveOfficer", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "approveOfficer", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_payType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "payType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PrintTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrintTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Printer", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Printer", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Printer", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Printer", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PrintMac", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintMac", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrintMac", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintMac", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_diseaseName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "diseaseName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_diseaseName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "diseaseName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_reportDoubleFlag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reportDoubleFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BaseChecker", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BaseChecker", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BaseChecker", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BaseChecker", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_sapTradeFlag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sapTradeFlag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sapTradeFlag", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sapTradeFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_crisisFlag", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "crisisFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_printTimes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "printTimes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_printTimes", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "printTimes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_mkbarcode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mkbarcode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_mkbarcode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mkbarcode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_mkprintflag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mkprintflag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_mkprintflag", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mkprintflag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_istakeaway", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "istakeaway", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_istakeaway", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "istakeaway", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_sqrq", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sqrq", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sqrq", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sqrq", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_offBodyTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "offBodyTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_offBodyTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "offBodyTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_transDoctel", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "transDoctel", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_transDoctel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "transDoctel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sampleId", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "sampleId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::reportview.Properties.Settings.Default.MKPathologyDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT sampleId, diseaseId, barcode, pathologyNo, reportNo, sampleNo, customerBarcode, requestNo, originalPathNo, patientName, sex, age, ageType, birthday, menopause, LMPDate, customerCode, customerName, patientType, patientId, wardCode, wardName, bedNo, departmentCode, departmentName, doctorId, doctorName, cardNo, IDNumber, medicalInsuranceType, medicalInsuranceNo, collectTime, receiveTime, maritalStatus, telphoneNo, address, diagnosis, registrant, registrationTime, modifyTime, modifier, createTime, creater, freezeFlag, cellaFlag, specimenName, specimenType, specimenNumber, specimenQuantity, unqualifiedReason, flakingMethod, remark, positiveFlag, retakeFlag, reportTime, diagnosisDoctor, checkDoctor, verifier, screeningMan, sampleDoctorId, sampleDoctorName, sampleTime, samplePart, checkItemId, checkItemName, checkCount, pinyiCode, wubiCode, resultXML, sampleStatus, sap_xsdd, sap_xxmh, postscript, firstDoctor, approveOfficer, payType, PrintTime, Printer, PrintMac, diseaseName, reportDoubleFlag, BaseChecker, neizhu, sapTradeFlag, crisisFlag, printTimes, mkbarcode, mkprintflag, istakeaway, sqrq, offBodyTime, transDoctel FROM dbo.BL_Sampleinfo";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MKPathologyDBDataSet.BL_SampleinfoDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MKPathologyDBDataSet.BL_SampleinfoDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MKPathologyDBDataSet.BL_SampleinfoDataTable dataTable = new MKPathologyDBDataSet.BL_SampleinfoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MKPathologyDBDataSet.BL_SampleinfoDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MKPathologyDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "BL_Sampleinfo");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    decimal Original_sampleId, 
                    string Original_diseaseId, 
                    string Original_barcode, 
                    string Original_pathologyNo, 
                    string Original_reportNo, 
                    string Original_sampleNo, 
                    string Original_customerBarcode, 
                    string Original_requestNo, 
                    string Original_originalPathNo, 
                    string Original_patientName, 
                    string Original_sex, 
                    string Original_age, 
                    string Original_ageType, 
                    global::System.Nullable<global::System.DateTime> Original_birthday, 
                    string Original_menopause, 
                    global::System.Nullable<global::System.DateTime> Original_LMPDate, 
                    string Original_customerCode, 
                    string Original_customerName, 
                    string Original_patientType, 
                    string Original_patientId, 
                    string Original_wardCode, 
                    string Original_wardName, 
                    string Original_bedNo, 
                    string Original_departmentCode, 
                    string Original_departmentName, 
                    string Original_doctorId, 
                    string Original_doctorName, 
                    string Original_cardNo, 
                    string Original_IDNumber, 
                    string Original_medicalInsuranceType, 
                    string Original_medicalInsuranceNo, 
                    global::System.Nullable<global::System.DateTime> Original_collectTime, 
                    global::System.Nullable<global::System.DateTime> Original_receiveTime, 
                    string Original_maritalStatus, 
                    string Original_telphoneNo, 
                    string Original_address, 
                    string Original_diagnosis, 
                    string Original_registrant, 
                    global::System.Nullable<global::System.DateTime> Original_registrationTime, 
                    System.DateTime Original_modifyTime, 
                    string Original_modifier, 
                    System.DateTime Original_createTime, 
                    string Original_creater, 
                    string Original_freezeFlag, 
                    string Original_cellaFlag, 
                    string Original_specimenName, 
                    string Original_specimenType, 
                    string Original_specimenNumber, 
                    string Original_specimenQuantity, 
                    string Original_unqualifiedReason, 
                    string Original_flakingMethod, 
                    string Original_positiveFlag, 
                    string Original_retakeFlag, 
                    global::System.Nullable<global::System.DateTime> Original_reportTime, 
                    string Original_diagnosisDoctor, 
                    string Original_checkDoctor, 
                    string Original_verifier, 
                    string Original_screeningMan, 
                    string Original_sampleDoctorId, 
                    string Original_sampleDoctorName, 
                    global::System.Nullable<global::System.DateTime> Original_sampleTime, 
                    string Original_samplePart, 
                    string Original_checkItemId, 
                    string Original_checkCount, 
                    string Original_pinyiCode, 
                    string Original_wubiCode, 
                    string Original_sampleStatus, 
                    string Original_sap_xsdd, 
                    string Original_postscript, 
                    string Original_firstDoctor, 
                    string Original_approveOfficer, 
                    string Original_payType, 
                    global::System.Nullable<global::System.DateTime> Original_PrintTime, 
                    string Original_Printer, 
                    string Original_PrintMac, 
                    string Original_diseaseName, 
                    int Original_reportDoubleFlag, 
                    string Original_BaseChecker, 
                    string Original_sapTradeFlag, 
                    string Original_crisisFlag, 
                    string Original_printTimes, 
                    string Original_mkbarcode, 
                    string Original_mkprintflag, 
                    string Original_istakeaway, 
                    global::System.Nullable<global::System.DateTime> Original_sqrq, 
                    global::System.Nullable<global::System.DateTime> Original_offBodyTime, 
                    string Original_transDoctel) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_sampleId));
            if ((Original_diseaseId == null)) {
                throw new global::System.ArgumentNullException("Original_diseaseId");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_diseaseId));
            }
            if ((Original_barcode == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_barcode));
            }
            if ((Original_pathologyNo == null)) {
                throw new global::System.ArgumentNullException("Original_pathologyNo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_pathologyNo));
            }
            if ((Original_reportNo == null)) {
                throw new global::System.ArgumentNullException("Original_reportNo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_reportNo));
            }
            if ((Original_sampleNo == null)) {
                throw new global::System.ArgumentNullException("Original_sampleNo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_sampleNo));
            }
            if ((Original_customerBarcode == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_customerBarcode));
            }
            if ((Original_requestNo == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_requestNo));
            }
            if ((Original_originalPathNo == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_originalPathNo));
            }
            if ((Original_patientName == null)) {
                throw new global::System.ArgumentNullException("Original_patientName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_patientName));
            }
            if ((Original_sex == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_sex));
            }
            if ((Original_age == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_age));
            }
            if ((Original_ageType == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_ageType));
            }
            if ((Original_birthday.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((System.DateTime)(Original_birthday.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_menopause == null)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_menopause));
            }
            if ((Original_LMPDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((System.DateTime)(Original_LMPDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_customerCode == null)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_customerCode));
            }
            if ((Original_customerName == null)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((string)(Original_customerName));
            }
            if ((Original_patientType == null)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((string)(Original_patientType));
            }
            if ((Original_patientId == null)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((string)(Original_patientId));
            }
            if ((Original_wardCode == null)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((string)(Original_wardCode));
            }
            if ((Original_wardName == null)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((string)(Original_wardName));
            }
            if ((Original_bedNo == null)) {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[39].Value = ((string)(Original_bedNo));
            }
            if ((Original_departmentCode == null)) {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[41].Value = ((string)(Original_departmentCode));
            }
            if ((Original_departmentName == null)) {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[43].Value = ((string)(Original_departmentName));
            }
            if ((Original_doctorId == null)) {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[45].Value = ((string)(Original_doctorId));
            }
            if ((Original_doctorName == null)) {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[47].Value = ((string)(Original_doctorName));
            }
            if ((Original_cardNo == null)) {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[49].Value = ((string)(Original_cardNo));
            }
            if ((Original_IDNumber == null)) {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[51].Value = ((string)(Original_IDNumber));
            }
            if ((Original_medicalInsuranceType == null)) {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[53].Value = ((string)(Original_medicalInsuranceType));
            }
            if ((Original_medicalInsuranceNo == null)) {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[55].Value = ((string)(Original_medicalInsuranceNo));
            }
            if ((Original_collectTime.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[57].Value = ((System.DateTime)(Original_collectTime.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Original_receiveTime.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[59].Value = ((System.DateTime)(Original_receiveTime.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((Original_maritalStatus == null)) {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[61].Value = ((string)(Original_maritalStatus));
            }
            if ((Original_telphoneNo == null)) {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[63].Value = ((string)(Original_telphoneNo));
            }
            if ((Original_address == null)) {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[65].Value = ((string)(Original_address));
            }
            if ((Original_diagnosis == null)) {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[67].Value = ((string)(Original_diagnosis));
            }
            if ((Original_registrant == null)) {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[69].Value = ((string)(Original_registrant));
            }
            if ((Original_registrationTime.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[71].Value = ((System.DateTime)(Original_registrationTime.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[72].Value = ((System.DateTime)(Original_modifyTime));
            if ((Original_modifier == null)) {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[74].Value = ((string)(Original_modifier));
            }
            this.Adapter.DeleteCommand.Parameters[75].Value = ((System.DateTime)(Original_createTime));
            if ((Original_creater == null)) {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[77].Value = ((string)(Original_creater));
            }
            if ((Original_freezeFlag == null)) {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[79].Value = ((string)(Original_freezeFlag));
            }
            if ((Original_cellaFlag == null)) {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[81].Value = ((string)(Original_cellaFlag));
            }
            if ((Original_specimenName == null)) {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[83].Value = ((string)(Original_specimenName));
            }
            if ((Original_specimenType == null)) {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[85].Value = ((string)(Original_specimenType));
            }
            if ((Original_specimenNumber == null)) {
                this.Adapter.DeleteCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[87].Value = ((string)(Original_specimenNumber));
            }
            if ((Original_specimenQuantity == null)) {
                this.Adapter.DeleteCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[89].Value = ((string)(Original_specimenQuantity));
            }
            if ((Original_unqualifiedReason == null)) {
                this.Adapter.DeleteCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[91].Value = ((string)(Original_unqualifiedReason));
            }
            if ((Original_flakingMethod == null)) {
                this.Adapter.DeleteCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[93].Value = ((string)(Original_flakingMethod));
            }
            if ((Original_positiveFlag == null)) {
                throw new global::System.ArgumentNullException("Original_positiveFlag");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[94].Value = ((string)(Original_positiveFlag));
            }
            if ((Original_retakeFlag == null)) {
                throw new global::System.ArgumentNullException("Original_retakeFlag");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((string)(Original_retakeFlag));
            }
            if ((Original_reportTime.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[97].Value = ((System.DateTime)(Original_reportTime.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            if ((Original_diagnosisDoctor == null)) {
                this.Adapter.DeleteCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[99].Value = ((string)(Original_diagnosisDoctor));
            }
            if ((Original_checkDoctor == null)) {
                this.Adapter.DeleteCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[101].Value = ((string)(Original_checkDoctor));
            }
            if ((Original_verifier == null)) {
                this.Adapter.DeleteCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[103].Value = ((string)(Original_verifier));
            }
            if ((Original_screeningMan == null)) {
                this.Adapter.DeleteCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[105].Value = ((string)(Original_screeningMan));
            }
            if ((Original_sampleDoctorId == null)) {
                this.Adapter.DeleteCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[107].Value = ((string)(Original_sampleDoctorId));
            }
            if ((Original_sampleDoctorName == null)) {
                this.Adapter.DeleteCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[109].Value = ((string)(Original_sampleDoctorName));
            }
            if ((Original_sampleTime.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[110].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[111].Value = ((System.DateTime)(Original_sampleTime.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[110].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            if ((Original_samplePart == null)) {
                this.Adapter.DeleteCommand.Parameters[112].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[112].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[113].Value = ((string)(Original_samplePart));
            }
            if ((Original_checkItemId == null)) {
                this.Adapter.DeleteCommand.Parameters[114].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[114].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[115].Value = ((string)(Original_checkItemId));
            }
            if ((Original_checkCount == null)) {
                this.Adapter.DeleteCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[117].Value = ((string)(Original_checkCount));
            }
            if ((Original_pinyiCode == null)) {
                this.Adapter.DeleteCommand.Parameters[118].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[118].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[119].Value = ((string)(Original_pinyiCode));
            }
            if ((Original_wubiCode == null)) {
                this.Adapter.DeleteCommand.Parameters[120].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[120].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[121].Value = ((string)(Original_wubiCode));
            }
            if ((Original_sampleStatus == null)) {
                this.Adapter.DeleteCommand.Parameters[122].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[122].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[123].Value = ((string)(Original_sampleStatus));
            }
            if ((Original_sap_xsdd == null)) {
                this.Adapter.DeleteCommand.Parameters[124].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[124].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[125].Value = ((string)(Original_sap_xsdd));
            }
            if ((Original_postscript == null)) {
                this.Adapter.DeleteCommand.Parameters[126].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[126].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[127].Value = ((string)(Original_postscript));
            }
            if ((Original_firstDoctor == null)) {
                this.Adapter.DeleteCommand.Parameters[128].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[129].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[128].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[129].Value = ((string)(Original_firstDoctor));
            }
            if ((Original_approveOfficer == null)) {
                this.Adapter.DeleteCommand.Parameters[130].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[130].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[131].Value = ((string)(Original_approveOfficer));
            }
            if ((Original_payType == null)) {
                throw new global::System.ArgumentNullException("Original_payType");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[132].Value = ((string)(Original_payType));
            }
            if ((Original_PrintTime.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[133].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[134].Value = ((System.DateTime)(Original_PrintTime.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[133].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            if ((Original_Printer == null)) {
                this.Adapter.DeleteCommand.Parameters[135].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[135].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[136].Value = ((string)(Original_Printer));
            }
            if ((Original_PrintMac == null)) {
                this.Adapter.DeleteCommand.Parameters[137].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[138].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[137].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[138].Value = ((string)(Original_PrintMac));
            }
            if ((Original_diseaseName == null)) {
                this.Adapter.DeleteCommand.Parameters[139].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[140].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[139].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[140].Value = ((string)(Original_diseaseName));
            }
            this.Adapter.DeleteCommand.Parameters[141].Value = ((int)(Original_reportDoubleFlag));
            if ((Original_BaseChecker == null)) {
                this.Adapter.DeleteCommand.Parameters[142].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[143].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[142].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[143].Value = ((string)(Original_BaseChecker));
            }
            if ((Original_sapTradeFlag == null)) {
                this.Adapter.DeleteCommand.Parameters[144].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[145].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[144].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[145].Value = ((string)(Original_sapTradeFlag));
            }
            if ((Original_crisisFlag == null)) {
                throw new global::System.ArgumentNullException("Original_crisisFlag");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[146].Value = ((string)(Original_crisisFlag));
            }
            if ((Original_printTimes == null)) {
                this.Adapter.DeleteCommand.Parameters[147].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[148].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[147].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[148].Value = ((string)(Original_printTimes));
            }
            if ((Original_mkbarcode == null)) {
                this.Adapter.DeleteCommand.Parameters[149].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[150].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[149].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[150].Value = ((string)(Original_mkbarcode));
            }
            if ((Original_mkprintflag == null)) {
                this.Adapter.DeleteCommand.Parameters[151].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[152].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[151].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[152].Value = ((string)(Original_mkprintflag));
            }
            if ((Original_istakeaway == null)) {
                this.Adapter.DeleteCommand.Parameters[153].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[154].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[153].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[154].Value = ((string)(Original_istakeaway));
            }
            if ((Original_sqrq.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[155].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[156].Value = ((System.DateTime)(Original_sqrq.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[155].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[156].Value = global::System.DBNull.Value;
            }
            if ((Original_offBodyTime.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[157].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[158].Value = ((System.DateTime)(Original_offBodyTime.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[157].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[158].Value = global::System.DBNull.Value;
            }
            if ((Original_transDoctel == null)) {
                this.Adapter.DeleteCommand.Parameters[159].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[160].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[159].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[160].Value = ((string)(Original_transDoctel));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string diseaseId, 
                    string barcode, 
                    string pathologyNo, 
                    string reportNo, 
                    string sampleNo, 
                    string customerBarcode, 
                    string requestNo, 
                    string originalPathNo, 
                    string patientName, 
                    string sex, 
                    string age, 
                    string ageType, 
                    global::System.Nullable<global::System.DateTime> birthday, 
                    string menopause, 
                    global::System.Nullable<global::System.DateTime> LMPDate, 
                    string customerCode, 
                    string customerName, 
                    string patientType, 
                    string patientId, 
                    string wardCode, 
                    string wardName, 
                    string bedNo, 
                    string departmentCode, 
                    string departmentName, 
                    string doctorId, 
                    string doctorName, 
                    string cardNo, 
                    string IDNumber, 
                    string medicalInsuranceType, 
                    string medicalInsuranceNo, 
                    global::System.Nullable<global::System.DateTime> collectTime, 
                    global::System.Nullable<global::System.DateTime> receiveTime, 
                    string maritalStatus, 
                    string telphoneNo, 
                    string address, 
                    string diagnosis, 
                    string registrant, 
                    global::System.Nullable<global::System.DateTime> registrationTime, 
                    System.DateTime modifyTime, 
                    string modifier, 
                    System.DateTime createTime, 
                    string creater, 
                    string freezeFlag, 
                    string cellaFlag, 
                    string specimenName, 
                    string specimenType, 
                    string specimenNumber, 
                    string specimenQuantity, 
                    string unqualifiedReason, 
                    string flakingMethod, 
                    string remark, 
                    string positiveFlag, 
                    string retakeFlag, 
                    global::System.Nullable<global::System.DateTime> reportTime, 
                    string diagnosisDoctor, 
                    string checkDoctor, 
                    string verifier, 
                    string screeningMan, 
                    string sampleDoctorId, 
                    string sampleDoctorName, 
                    global::System.Nullable<global::System.DateTime> sampleTime, 
                    string samplePart, 
                    string checkItemId, 
                    string checkItemName, 
                    string checkCount, 
                    string pinyiCode, 
                    string wubiCode, 
                    object resultXML, 
                    string sampleStatus, 
                    string sap_xsdd, 
                    string sap_xxmh, 
                    string postscript, 
                    string firstDoctor, 
                    string approveOfficer, 
                    string payType, 
                    global::System.Nullable<global::System.DateTime> PrintTime, 
                    string Printer, 
                    string PrintMac, 
                    string diseaseName, 
                    int reportDoubleFlag, 
                    string BaseChecker, 
                    string neizhu, 
                    string sapTradeFlag, 
                    string crisisFlag, 
                    string printTimes, 
                    string mkbarcode, 
                    string mkprintflag, 
                    string istakeaway, 
                    global::System.Nullable<global::System.DateTime> sqrq, 
                    global::System.Nullable<global::System.DateTime> offBodyTime, 
                    string transDoctel) {
            if ((diseaseId == null)) {
                throw new global::System.ArgumentNullException("diseaseId");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(diseaseId));
            }
            if ((barcode == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(barcode));
            }
            if ((pathologyNo == null)) {
                throw new global::System.ArgumentNullException("pathologyNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(pathologyNo));
            }
            if ((reportNo == null)) {
                throw new global::System.ArgumentNullException("reportNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(reportNo));
            }
            if ((sampleNo == null)) {
                throw new global::System.ArgumentNullException("sampleNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(sampleNo));
            }
            if ((customerBarcode == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(customerBarcode));
            }
            if ((requestNo == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(requestNo));
            }
            if ((originalPathNo == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(originalPathNo));
            }
            if ((patientName == null)) {
                throw new global::System.ArgumentNullException("patientName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(patientName));
            }
            if ((sex == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(sex));
            }
            if ((age == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(age));
            }
            if ((ageType == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(ageType));
            }
            if ((birthday.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(birthday.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((menopause == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(menopause));
            }
            if ((LMPDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(LMPDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((customerCode == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(customerCode));
            }
            if ((customerName == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(customerName));
            }
            if ((patientType == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(patientType));
            }
            if ((patientId == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(patientId));
            }
            if ((wardCode == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(wardCode));
            }
            if ((wardName == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(wardName));
            }
            if ((bedNo == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(bedNo));
            }
            if ((departmentCode == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(departmentCode));
            }
            if ((departmentName == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(departmentName));
            }
            if ((doctorId == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(doctorId));
            }
            if ((doctorName == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(doctorName));
            }
            if ((cardNo == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(cardNo));
            }
            if ((IDNumber == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(IDNumber));
            }
            if ((medicalInsuranceType == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(medicalInsuranceType));
            }
            if ((medicalInsuranceNo == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(medicalInsuranceNo));
            }
            if ((collectTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((System.DateTime)(collectTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((receiveTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((System.DateTime)(receiveTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((maritalStatus == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(maritalStatus));
            }
            if ((telphoneNo == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(telphoneNo));
            }
            if ((address == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(address));
            }
            if ((diagnosis == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(diagnosis));
            }
            if ((registrant == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(registrant));
            }
            if ((registrationTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((System.DateTime)(registrationTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[38].Value = ((System.DateTime)(modifyTime));
            if ((modifier == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(modifier));
            }
            this.Adapter.InsertCommand.Parameters[40].Value = ((System.DateTime)(createTime));
            if ((creater == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(creater));
            }
            if ((freezeFlag == null)) {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(freezeFlag));
            }
            if ((cellaFlag == null)) {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(cellaFlag));
            }
            if ((specimenName == null)) {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(specimenName));
            }
            if ((specimenType == null)) {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = ((string)(specimenType));
            }
            if ((specimenNumber == null)) {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = ((string)(specimenNumber));
            }
            if ((specimenQuantity == null)) {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(specimenQuantity));
            }
            if ((unqualifiedReason == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(unqualifiedReason));
            }
            if ((flakingMethod == null)) {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = ((string)(flakingMethod));
            }
            if ((remark == null)) {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = ((string)(remark));
            }
            if ((positiveFlag == null)) {
                throw new global::System.ArgumentNullException("positiveFlag");
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = ((string)(positiveFlag));
            }
            if ((retakeFlag == null)) {
                throw new global::System.ArgumentNullException("retakeFlag");
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = ((string)(retakeFlag));
            }
            if ((reportTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((System.DateTime)(reportTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((diagnosisDoctor == null)) {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = ((string)(diagnosisDoctor));
            }
            if ((checkDoctor == null)) {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = ((string)(checkDoctor));
            }
            if ((verifier == null)) {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = ((string)(verifier));
            }
            if ((screeningMan == null)) {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = ((string)(screeningMan));
            }
            if ((sampleDoctorId == null)) {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = ((string)(sampleDoctorId));
            }
            if ((sampleDoctorName == null)) {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = ((string)(sampleDoctorName));
            }
            if ((sampleTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[60].Value = ((System.DateTime)(sampleTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((samplePart == null)) {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = ((string)(samplePart));
            }
            if ((checkItemId == null)) {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = ((string)(checkItemId));
            }
            if ((checkItemName == null)) {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = ((string)(checkItemName));
            }
            if ((checkCount == null)) {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = ((string)(checkCount));
            }
            if ((pinyiCode == null)) {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = ((string)(pinyiCode));
            }
            if ((wubiCode == null)) {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = ((string)(wubiCode));
            }
            if ((resultXML == null)) {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = ((object)(resultXML));
            }
            if ((sampleStatus == null)) {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = ((string)(sampleStatus));
            }
            if ((sap_xsdd == null)) {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = ((string)(sap_xsdd));
            }
            if ((sap_xxmh == null)) {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = ((string)(sap_xxmh));
            }
            if ((postscript == null)) {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = ((string)(postscript));
            }
            if ((firstDoctor == null)) {
                this.Adapter.InsertCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = ((string)(firstDoctor));
            }
            if ((approveOfficer == null)) {
                this.Adapter.InsertCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[73].Value = ((string)(approveOfficer));
            }
            if ((payType == null)) {
                throw new global::System.ArgumentNullException("payType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[74].Value = ((string)(payType));
            }
            if ((PrintTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[75].Value = ((System.DateTime)(PrintTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((Printer == null)) {
                this.Adapter.InsertCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[76].Value = ((string)(Printer));
            }
            if ((PrintMac == null)) {
                this.Adapter.InsertCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[77].Value = ((string)(PrintMac));
            }
            if ((diseaseName == null)) {
                this.Adapter.InsertCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[78].Value = ((string)(diseaseName));
            }
            this.Adapter.InsertCommand.Parameters[79].Value = ((int)(reportDoubleFlag));
            if ((BaseChecker == null)) {
                this.Adapter.InsertCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[80].Value = ((string)(BaseChecker));
            }
            if ((neizhu == null)) {
                this.Adapter.InsertCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[81].Value = ((string)(neizhu));
            }
            if ((sapTradeFlag == null)) {
                this.Adapter.InsertCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[82].Value = ((string)(sapTradeFlag));
            }
            if ((crisisFlag == null)) {
                throw new global::System.ArgumentNullException("crisisFlag");
            }
            else {
                this.Adapter.InsertCommand.Parameters[83].Value = ((string)(crisisFlag));
            }
            if ((printTimes == null)) {
                this.Adapter.InsertCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[84].Value = ((string)(printTimes));
            }
            if ((mkbarcode == null)) {
                this.Adapter.InsertCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[85].Value = ((string)(mkbarcode));
            }
            if ((mkprintflag == null)) {
                this.Adapter.InsertCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[86].Value = ((string)(mkprintflag));
            }
            if ((istakeaway == null)) {
                this.Adapter.InsertCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[87].Value = ((string)(istakeaway));
            }
            if ((sqrq.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[88].Value = ((System.DateTime)(sqrq.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            if ((offBodyTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[89].Value = ((System.DateTime)(offBodyTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((transDoctel == null)) {
                this.Adapter.InsertCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[90].Value = ((string)(transDoctel));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string diseaseId, 
                    string barcode, 
                    string pathologyNo, 
                    string reportNo, 
                    string sampleNo, 
                    string customerBarcode, 
                    string requestNo, 
                    string originalPathNo, 
                    string patientName, 
                    string sex, 
                    string age, 
                    string ageType, 
                    global::System.Nullable<global::System.DateTime> birthday, 
                    string menopause, 
                    global::System.Nullable<global::System.DateTime> LMPDate, 
                    string customerCode, 
                    string customerName, 
                    string patientType, 
                    string patientId, 
                    string wardCode, 
                    string wardName, 
                    string bedNo, 
                    string departmentCode, 
                    string departmentName, 
                    string doctorId, 
                    string doctorName, 
                    string cardNo, 
                    string IDNumber, 
                    string medicalInsuranceType, 
                    string medicalInsuranceNo, 
                    global::System.Nullable<global::System.DateTime> collectTime, 
                    global::System.Nullable<global::System.DateTime> receiveTime, 
                    string maritalStatus, 
                    string telphoneNo, 
                    string address, 
                    string diagnosis, 
                    string registrant, 
                    global::System.Nullable<global::System.DateTime> registrationTime, 
                    System.DateTime modifyTime, 
                    string modifier, 
                    System.DateTime createTime, 
                    string creater, 
                    string freezeFlag, 
                    string cellaFlag, 
                    string specimenName, 
                    string specimenType, 
                    string specimenNumber, 
                    string specimenQuantity, 
                    string unqualifiedReason, 
                    string flakingMethod, 
                    string remark, 
                    string positiveFlag, 
                    string retakeFlag, 
                    global::System.Nullable<global::System.DateTime> reportTime, 
                    string diagnosisDoctor, 
                    string checkDoctor, 
                    string verifier, 
                    string screeningMan, 
                    string sampleDoctorId, 
                    string sampleDoctorName, 
                    global::System.Nullable<global::System.DateTime> sampleTime, 
                    string samplePart, 
                    string checkItemId, 
                    string checkItemName, 
                    string checkCount, 
                    string pinyiCode, 
                    string wubiCode, 
                    object resultXML, 
                    string sampleStatus, 
                    string sap_xsdd, 
                    string sap_xxmh, 
                    string postscript, 
                    string firstDoctor, 
                    string approveOfficer, 
                    string payType, 
                    global::System.Nullable<global::System.DateTime> PrintTime, 
                    string Printer, 
                    string PrintMac, 
                    string diseaseName, 
                    int reportDoubleFlag, 
                    string BaseChecker, 
                    string neizhu, 
                    string sapTradeFlag, 
                    string crisisFlag, 
                    string printTimes, 
                    string mkbarcode, 
                    string mkprintflag, 
                    string istakeaway, 
                    global::System.Nullable<global::System.DateTime> sqrq, 
                    global::System.Nullable<global::System.DateTime> offBodyTime, 
                    string transDoctel, 
                    decimal Original_sampleId, 
                    string Original_diseaseId, 
                    string Original_barcode, 
                    string Original_pathologyNo, 
                    string Original_reportNo, 
                    string Original_sampleNo, 
                    string Original_customerBarcode, 
                    string Original_requestNo, 
                    string Original_originalPathNo, 
                    string Original_patientName, 
                    string Original_sex, 
                    string Original_age, 
                    string Original_ageType, 
                    global::System.Nullable<global::System.DateTime> Original_birthday, 
                    string Original_menopause, 
                    global::System.Nullable<global::System.DateTime> Original_LMPDate, 
                    string Original_customerCode, 
                    string Original_customerName, 
                    string Original_patientType, 
                    string Original_patientId, 
                    string Original_wardCode, 
                    string Original_wardName, 
                    string Original_bedNo, 
                    string Original_departmentCode, 
                    string Original_departmentName, 
                    string Original_doctorId, 
                    string Original_doctorName, 
                    string Original_cardNo, 
                    string Original_IDNumber, 
                    string Original_medicalInsuranceType, 
                    string Original_medicalInsuranceNo, 
                    global::System.Nullable<global::System.DateTime> Original_collectTime, 
                    global::System.Nullable<global::System.DateTime> Original_receiveTime, 
                    string Original_maritalStatus, 
                    string Original_telphoneNo, 
                    string Original_address, 
                    string Original_diagnosis, 
                    string Original_registrant, 
                    global::System.Nullable<global::System.DateTime> Original_registrationTime, 
                    System.DateTime Original_modifyTime, 
                    string Original_modifier, 
                    System.DateTime Original_createTime, 
                    string Original_creater, 
                    string Original_freezeFlag, 
                    string Original_cellaFlag, 
                    string Original_specimenName, 
                    string Original_specimenType, 
                    string Original_specimenNumber, 
                    string Original_specimenQuantity, 
                    string Original_unqualifiedReason, 
                    string Original_flakingMethod, 
                    string Original_positiveFlag, 
                    string Original_retakeFlag, 
                    global::System.Nullable<global::System.DateTime> Original_reportTime, 
                    string Original_diagnosisDoctor, 
                    string Original_checkDoctor, 
                    string Original_verifier, 
                    string Original_screeningMan, 
                    string Original_sampleDoctorId, 
                    string Original_sampleDoctorName, 
                    global::System.Nullable<global::System.DateTime> Original_sampleTime, 
                    string Original_samplePart, 
                    string Original_checkItemId, 
                    string Original_checkCount, 
                    string Original_pinyiCode, 
                    string Original_wubiCode, 
                    string Original_sampleStatus, 
                    string Original_sap_xsdd, 
                    string Original_postscript, 
                    string Original_firstDoctor, 
                    string Original_approveOfficer, 
                    string Original_payType, 
                    global::System.Nullable<global::System.DateTime> Original_PrintTime, 
                    string Original_Printer, 
                    string Original_PrintMac, 
                    string Original_diseaseName, 
                    int Original_reportDoubleFlag, 
                    string Original_BaseChecker, 
                    string Original_sapTradeFlag, 
                    string Original_crisisFlag, 
                    string Original_printTimes, 
                    string Original_mkbarcode, 
                    string Original_mkprintflag, 
                    string Original_istakeaway, 
                    global::System.Nullable<global::System.DateTime> Original_sqrq, 
                    global::System.Nullable<global::System.DateTime> Original_offBodyTime, 
                    string Original_transDoctel, 
                    decimal sampleId) {
            if ((diseaseId == null)) {
                throw new global::System.ArgumentNullException("diseaseId");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(diseaseId));
            }
            if ((barcode == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(barcode));
            }
            if ((pathologyNo == null)) {
                throw new global::System.ArgumentNullException("pathologyNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(pathologyNo));
            }
            if ((reportNo == null)) {
                throw new global::System.ArgumentNullException("reportNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(reportNo));
            }
            if ((sampleNo == null)) {
                throw new global::System.ArgumentNullException("sampleNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(sampleNo));
            }
            if ((customerBarcode == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(customerBarcode));
            }
            if ((requestNo == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(requestNo));
            }
            if ((originalPathNo == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(originalPathNo));
            }
            if ((patientName == null)) {
                throw new global::System.ArgumentNullException("patientName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(patientName));
            }
            if ((sex == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(sex));
            }
            if ((age == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(age));
            }
            if ((ageType == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(ageType));
            }
            if ((birthday.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(birthday.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((menopause == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(menopause));
            }
            if ((LMPDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(LMPDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((customerCode == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(customerCode));
            }
            if ((customerName == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(customerName));
            }
            if ((patientType == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(patientType));
            }
            if ((patientId == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(patientId));
            }
            if ((wardCode == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(wardCode));
            }
            if ((wardName == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(wardName));
            }
            if ((bedNo == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(bedNo));
            }
            if ((departmentCode == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(departmentCode));
            }
            if ((departmentName == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(departmentName));
            }
            if ((doctorId == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(doctorId));
            }
            if ((doctorName == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(doctorName));
            }
            if ((cardNo == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(cardNo));
            }
            if ((IDNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(IDNumber));
            }
            if ((medicalInsuranceType == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(medicalInsuranceType));
            }
            if ((medicalInsuranceNo == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(medicalInsuranceNo));
            }
            if ((collectTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((System.DateTime)(collectTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((receiveTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((System.DateTime)(receiveTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((maritalStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(maritalStatus));
            }
            if ((telphoneNo == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(telphoneNo));
            }
            if ((address == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(address));
            }
            if ((diagnosis == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(diagnosis));
            }
            if ((registrant == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(registrant));
            }
            if ((registrationTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((System.DateTime)(registrationTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[38].Value = ((System.DateTime)(modifyTime));
            if ((modifier == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(modifier));
            }
            this.Adapter.UpdateCommand.Parameters[40].Value = ((System.DateTime)(createTime));
            if ((creater == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(creater));
            }
            if ((freezeFlag == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(freezeFlag));
            }
            if ((cellaFlag == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(cellaFlag));
            }
            if ((specimenName == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(specimenName));
            }
            if ((specimenType == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(specimenType));
            }
            if ((specimenNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(specimenNumber));
            }
            if ((specimenQuantity == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(specimenQuantity));
            }
            if ((unqualifiedReason == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(unqualifiedReason));
            }
            if ((flakingMethod == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(flakingMethod));
            }
            if ((remark == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(remark));
            }
            if ((positiveFlag == null)) {
                throw new global::System.ArgumentNullException("positiveFlag");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(positiveFlag));
            }
            if ((retakeFlag == null)) {
                throw new global::System.ArgumentNullException("retakeFlag");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(retakeFlag));
            }
            if ((reportTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((System.DateTime)(reportTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((diagnosisDoctor == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(diagnosisDoctor));
            }
            if ((checkDoctor == null)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(checkDoctor));
            }
            if ((verifier == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(verifier));
            }
            if ((screeningMan == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(screeningMan));
            }
            if ((sampleDoctorId == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(sampleDoctorId));
            }
            if ((sampleDoctorName == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(sampleDoctorName));
            }
            if ((sampleTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((System.DateTime)(sampleTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((samplePart == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(samplePart));
            }
            if ((checkItemId == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(checkItemId));
            }
            if ((checkItemName == null)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(checkItemName));
            }
            if ((checkCount == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(checkCount));
            }
            if ((pinyiCode == null)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(pinyiCode));
            }
            if ((wubiCode == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(wubiCode));
            }
            if ((resultXML == null)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(resultXML));
            }
            if ((sampleStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(sampleStatus));
            }
            if ((sap_xsdd == null)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(sap_xsdd));
            }
            if ((sap_xxmh == null)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(sap_xxmh));
            }
            if ((postscript == null)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(postscript));
            }
            if ((firstDoctor == null)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(firstDoctor));
            }
            if ((approveOfficer == null)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(approveOfficer));
            }
            if ((payType == null)) {
                throw new global::System.ArgumentNullException("payType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((string)(payType));
            }
            if ((PrintTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((System.DateTime)(PrintTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((Printer == null)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((string)(Printer));
            }
            if ((PrintMac == null)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((string)(PrintMac));
            }
            if ((diseaseName == null)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((string)(diseaseName));
            }
            this.Adapter.UpdateCommand.Parameters[79].Value = ((int)(reportDoubleFlag));
            if ((BaseChecker == null)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((string)(BaseChecker));
            }
            if ((neizhu == null)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((string)(neizhu));
            }
            if ((sapTradeFlag == null)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((string)(sapTradeFlag));
            }
            if ((crisisFlag == null)) {
                throw new global::System.ArgumentNullException("crisisFlag");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((string)(crisisFlag));
            }
            if ((printTimes == null)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((string)(printTimes));
            }
            if ((mkbarcode == null)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((string)(mkbarcode));
            }
            if ((mkprintflag == null)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((string)(mkprintflag));
            }
            if ((istakeaway == null)) {
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((string)(istakeaway));
            }
            if ((sqrq.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((System.DateTime)(sqrq.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            if ((offBodyTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((System.DateTime)(offBodyTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((transDoctel == null)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((string)(transDoctel));
            }
            this.Adapter.UpdateCommand.Parameters[91].Value = ((decimal)(Original_sampleId));
            if ((Original_diseaseId == null)) {
                throw new global::System.ArgumentNullException("Original_diseaseId");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((string)(Original_diseaseId));
            }
            if ((Original_barcode == null)) {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[94].Value = ((string)(Original_barcode));
            }
            if ((Original_pathologyNo == null)) {
                throw new global::System.ArgumentNullException("Original_pathologyNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((string)(Original_pathologyNo));
            }
            if ((Original_reportNo == null)) {
                throw new global::System.ArgumentNullException("Original_reportNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((string)(Original_reportNo));
            }
            if ((Original_sampleNo == null)) {
                throw new global::System.ArgumentNullException("Original_sampleNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((string)(Original_sampleNo));
            }
            if ((Original_customerBarcode == null)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[99].Value = ((string)(Original_customerBarcode));
            }
            if ((Original_requestNo == null)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[101].Value = ((string)(Original_requestNo));
            }
            if ((Original_originalPathNo == null)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[103].Value = ((string)(Original_originalPathNo));
            }
            if ((Original_patientName == null)) {
                throw new global::System.ArgumentNullException("Original_patientName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((string)(Original_patientName));
            }
            if ((Original_sex == null)) {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[106].Value = ((string)(Original_sex));
            }
            if ((Original_age == null)) {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[108].Value = ((string)(Original_age));
            }
            if ((Original_ageType == null)) {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[110].Value = ((string)(Original_ageType));
            }
            if ((Original_birthday.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[112].Value = ((System.DateTime)(Original_birthday.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            if ((Original_menopause == null)) {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[114].Value = ((string)(Original_menopause));
            }
            if ((Original_LMPDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[116].Value = ((System.DateTime)(Original_LMPDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            if ((Original_customerCode == null)) {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[118].Value = ((string)(Original_customerCode));
            }
            if ((Original_customerName == null)) {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[120].Value = ((string)(Original_customerName));
            }
            if ((Original_patientType == null)) {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[122].Value = ((string)(Original_patientType));
            }
            if ((Original_patientId == null)) {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[124].Value = ((string)(Original_patientId));
            }
            if ((Original_wardCode == null)) {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[126].Value = ((string)(Original_wardCode));
            }
            if ((Original_wardName == null)) {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[128].Value = ((string)(Original_wardName));
            }
            if ((Original_bedNo == null)) {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[130].Value = ((string)(Original_bedNo));
            }
            if ((Original_departmentCode == null)) {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[132].Value = ((string)(Original_departmentCode));
            }
            if ((Original_departmentName == null)) {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[134].Value = ((string)(Original_departmentName));
            }
            if ((Original_doctorId == null)) {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[136].Value = ((string)(Original_doctorId));
            }
            if ((Original_doctorName == null)) {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[138].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[138].Value = ((string)(Original_doctorName));
            }
            if ((Original_cardNo == null)) {
                this.Adapter.UpdateCommand.Parameters[139].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[140].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[139].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[140].Value = ((string)(Original_cardNo));
            }
            if ((Original_IDNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[141].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[142].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[141].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[142].Value = ((string)(Original_IDNumber));
            }
            if ((Original_medicalInsuranceType == null)) {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[144].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[144].Value = ((string)(Original_medicalInsuranceType));
            }
            if ((Original_medicalInsuranceNo == null)) {
                this.Adapter.UpdateCommand.Parameters[145].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[146].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[145].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[146].Value = ((string)(Original_medicalInsuranceNo));
            }
            if ((Original_collectTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[147].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[148].Value = ((System.DateTime)(Original_collectTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[147].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[148].Value = global::System.DBNull.Value;
            }
            if ((Original_receiveTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[149].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[150].Value = ((System.DateTime)(Original_receiveTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[149].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[150].Value = global::System.DBNull.Value;
            }
            if ((Original_maritalStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[151].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[152].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[151].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[152].Value = ((string)(Original_maritalStatus));
            }
            if ((Original_telphoneNo == null)) {
                this.Adapter.UpdateCommand.Parameters[153].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[154].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[153].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[154].Value = ((string)(Original_telphoneNo));
            }
            if ((Original_address == null)) {
                this.Adapter.UpdateCommand.Parameters[155].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[156].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[155].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[156].Value = ((string)(Original_address));
            }
            if ((Original_diagnosis == null)) {
                this.Adapter.UpdateCommand.Parameters[157].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[158].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[157].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[158].Value = ((string)(Original_diagnosis));
            }
            if ((Original_registrant == null)) {
                this.Adapter.UpdateCommand.Parameters[159].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[160].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[159].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[160].Value = ((string)(Original_registrant));
            }
            if ((Original_registrationTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[161].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[162].Value = ((System.DateTime)(Original_registrationTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[161].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[162].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[163].Value = ((System.DateTime)(Original_modifyTime));
            if ((Original_modifier == null)) {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[165].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[165].Value = ((string)(Original_modifier));
            }
            this.Adapter.UpdateCommand.Parameters[166].Value = ((System.DateTime)(Original_createTime));
            if ((Original_creater == null)) {
                this.Adapter.UpdateCommand.Parameters[167].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[168].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[167].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[168].Value = ((string)(Original_creater));
            }
            if ((Original_freezeFlag == null)) {
                this.Adapter.UpdateCommand.Parameters[169].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[170].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[169].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[170].Value = ((string)(Original_freezeFlag));
            }
            if ((Original_cellaFlag == null)) {
                this.Adapter.UpdateCommand.Parameters[171].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[172].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[171].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[172].Value = ((string)(Original_cellaFlag));
            }
            if ((Original_specimenName == null)) {
                this.Adapter.UpdateCommand.Parameters[173].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[174].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[173].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[174].Value = ((string)(Original_specimenName));
            }
            if ((Original_specimenType == null)) {
                this.Adapter.UpdateCommand.Parameters[175].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[176].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[175].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[176].Value = ((string)(Original_specimenType));
            }
            if ((Original_specimenNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[177].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[178].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[177].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[178].Value = ((string)(Original_specimenNumber));
            }
            if ((Original_specimenQuantity == null)) {
                this.Adapter.UpdateCommand.Parameters[179].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[180].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[179].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[180].Value = ((string)(Original_specimenQuantity));
            }
            if ((Original_unqualifiedReason == null)) {
                this.Adapter.UpdateCommand.Parameters[181].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[182].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[181].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[182].Value = ((string)(Original_unqualifiedReason));
            }
            if ((Original_flakingMethod == null)) {
                this.Adapter.UpdateCommand.Parameters[183].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[184].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[183].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[184].Value = ((string)(Original_flakingMethod));
            }
            if ((Original_positiveFlag == null)) {
                throw new global::System.ArgumentNullException("Original_positiveFlag");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[185].Value = ((string)(Original_positiveFlag));
            }
            if ((Original_retakeFlag == null)) {
                throw new global::System.ArgumentNullException("Original_retakeFlag");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[186].Value = ((string)(Original_retakeFlag));
            }
            if ((Original_reportTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[187].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[188].Value = ((System.DateTime)(Original_reportTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[187].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[188].Value = global::System.DBNull.Value;
            }
            if ((Original_diagnosisDoctor == null)) {
                this.Adapter.UpdateCommand.Parameters[189].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[190].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[189].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[190].Value = ((string)(Original_diagnosisDoctor));
            }
            if ((Original_checkDoctor == null)) {
                this.Adapter.UpdateCommand.Parameters[191].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[192].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[191].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[192].Value = ((string)(Original_checkDoctor));
            }
            if ((Original_verifier == null)) {
                this.Adapter.UpdateCommand.Parameters[193].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[194].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[193].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[194].Value = ((string)(Original_verifier));
            }
            if ((Original_screeningMan == null)) {
                this.Adapter.UpdateCommand.Parameters[195].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[196].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[195].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[196].Value = ((string)(Original_screeningMan));
            }
            if ((Original_sampleDoctorId == null)) {
                this.Adapter.UpdateCommand.Parameters[197].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[198].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[197].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[198].Value = ((string)(Original_sampleDoctorId));
            }
            if ((Original_sampleDoctorName == null)) {
                this.Adapter.UpdateCommand.Parameters[199].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[200].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[199].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[200].Value = ((string)(Original_sampleDoctorName));
            }
            if ((Original_sampleTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[201].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[202].Value = ((System.DateTime)(Original_sampleTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[201].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[202].Value = global::System.DBNull.Value;
            }
            if ((Original_samplePart == null)) {
                this.Adapter.UpdateCommand.Parameters[203].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[204].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[203].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[204].Value = ((string)(Original_samplePart));
            }
            if ((Original_checkItemId == null)) {
                this.Adapter.UpdateCommand.Parameters[205].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[206].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[205].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[206].Value = ((string)(Original_checkItemId));
            }
            if ((Original_checkCount == null)) {
                this.Adapter.UpdateCommand.Parameters[207].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[208].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[207].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[208].Value = ((string)(Original_checkCount));
            }
            if ((Original_pinyiCode == null)) {
                this.Adapter.UpdateCommand.Parameters[209].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[210].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[209].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[210].Value = ((string)(Original_pinyiCode));
            }
            if ((Original_wubiCode == null)) {
                this.Adapter.UpdateCommand.Parameters[211].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[212].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[211].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[212].Value = ((string)(Original_wubiCode));
            }
            if ((Original_sampleStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[213].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[214].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[213].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[214].Value = ((string)(Original_sampleStatus));
            }
            if ((Original_sap_xsdd == null)) {
                this.Adapter.UpdateCommand.Parameters[215].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[216].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[215].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[216].Value = ((string)(Original_sap_xsdd));
            }
            if ((Original_postscript == null)) {
                this.Adapter.UpdateCommand.Parameters[217].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[218].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[217].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[218].Value = ((string)(Original_postscript));
            }
            if ((Original_firstDoctor == null)) {
                this.Adapter.UpdateCommand.Parameters[219].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[220].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[219].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[220].Value = ((string)(Original_firstDoctor));
            }
            if ((Original_approveOfficer == null)) {
                this.Adapter.UpdateCommand.Parameters[221].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[222].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[221].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[222].Value = ((string)(Original_approveOfficer));
            }
            if ((Original_payType == null)) {
                throw new global::System.ArgumentNullException("Original_payType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[223].Value = ((string)(Original_payType));
            }
            if ((Original_PrintTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[224].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[225].Value = ((System.DateTime)(Original_PrintTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[224].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[225].Value = global::System.DBNull.Value;
            }
            if ((Original_Printer == null)) {
                this.Adapter.UpdateCommand.Parameters[226].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[227].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[226].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[227].Value = ((string)(Original_Printer));
            }
            if ((Original_PrintMac == null)) {
                this.Adapter.UpdateCommand.Parameters[228].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[229].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[228].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[229].Value = ((string)(Original_PrintMac));
            }
            if ((Original_diseaseName == null)) {
                this.Adapter.UpdateCommand.Parameters[230].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[231].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[230].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[231].Value = ((string)(Original_diseaseName));
            }
            this.Adapter.UpdateCommand.Parameters[232].Value = ((int)(Original_reportDoubleFlag));
            if ((Original_BaseChecker == null)) {
                this.Adapter.UpdateCommand.Parameters[233].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[234].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[233].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[234].Value = ((string)(Original_BaseChecker));
            }
            if ((Original_sapTradeFlag == null)) {
                this.Adapter.UpdateCommand.Parameters[235].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[236].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[235].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[236].Value = ((string)(Original_sapTradeFlag));
            }
            if ((Original_crisisFlag == null)) {
                throw new global::System.ArgumentNullException("Original_crisisFlag");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[237].Value = ((string)(Original_crisisFlag));
            }
            if ((Original_printTimes == null)) {
                this.Adapter.UpdateCommand.Parameters[238].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[239].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[238].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[239].Value = ((string)(Original_printTimes));
            }
            if ((Original_mkbarcode == null)) {
                this.Adapter.UpdateCommand.Parameters[240].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[241].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[240].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[241].Value = ((string)(Original_mkbarcode));
            }
            if ((Original_mkprintflag == null)) {
                this.Adapter.UpdateCommand.Parameters[242].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[243].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[242].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[243].Value = ((string)(Original_mkprintflag));
            }
            if ((Original_istakeaway == null)) {
                this.Adapter.UpdateCommand.Parameters[244].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[245].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[244].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[245].Value = ((string)(Original_istakeaway));
            }
            if ((Original_sqrq.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[246].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[247].Value = ((System.DateTime)(Original_sqrq.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[246].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[247].Value = global::System.DBNull.Value;
            }
            if ((Original_offBodyTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[248].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[249].Value = ((System.DateTime)(Original_offBodyTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[248].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[249].Value = global::System.DBNull.Value;
            }
            if ((Original_transDoctel == null)) {
                this.Adapter.UpdateCommand.Parameters[250].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[251].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[250].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[251].Value = ((string)(Original_transDoctel));
            }
            this.Adapter.UpdateCommand.Parameters[252].Value = ((decimal)(sampleId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string diseaseId, 
                    string barcode, 
                    string pathologyNo, 
                    string reportNo, 
                    string sampleNo, 
                    string customerBarcode, 
                    string requestNo, 
                    string originalPathNo, 
                    string patientName, 
                    string sex, 
                    string age, 
                    string ageType, 
                    global::System.Nullable<global::System.DateTime> birthday, 
                    string menopause, 
                    global::System.Nullable<global::System.DateTime> LMPDate, 
                    string customerCode, 
                    string customerName, 
                    string patientType, 
                    string patientId, 
                    string wardCode, 
                    string wardName, 
                    string bedNo, 
                    string departmentCode, 
                    string departmentName, 
                    string doctorId, 
                    string doctorName, 
                    string cardNo, 
                    string IDNumber, 
                    string medicalInsuranceType, 
                    string medicalInsuranceNo, 
                    global::System.Nullable<global::System.DateTime> collectTime, 
                    global::System.Nullable<global::System.DateTime> receiveTime, 
                    string maritalStatus, 
                    string telphoneNo, 
                    string address, 
                    string diagnosis, 
                    string registrant, 
                    global::System.Nullable<global::System.DateTime> registrationTime, 
                    System.DateTime modifyTime, 
                    string modifier, 
                    System.DateTime createTime, 
                    string creater, 
                    string freezeFlag, 
                    string cellaFlag, 
                    string specimenName, 
                    string specimenType, 
                    string specimenNumber, 
                    string specimenQuantity, 
                    string unqualifiedReason, 
                    string flakingMethod, 
                    string remark, 
                    string positiveFlag, 
                    string retakeFlag, 
                    global::System.Nullable<global::System.DateTime> reportTime, 
                    string diagnosisDoctor, 
                    string checkDoctor, 
                    string verifier, 
                    string screeningMan, 
                    string sampleDoctorId, 
                    string sampleDoctorName, 
                    global::System.Nullable<global::System.DateTime> sampleTime, 
                    string samplePart, 
                    string checkItemId, 
                    string checkItemName, 
                    string checkCount, 
                    string pinyiCode, 
                    string wubiCode, 
                    object resultXML, 
                    string sampleStatus, 
                    string sap_xsdd, 
                    string sap_xxmh, 
                    string postscript, 
                    string firstDoctor, 
                    string approveOfficer, 
                    string payType, 
                    global::System.Nullable<global::System.DateTime> PrintTime, 
                    string Printer, 
                    string PrintMac, 
                    string diseaseName, 
                    int reportDoubleFlag, 
                    string BaseChecker, 
                    string neizhu, 
                    string sapTradeFlag, 
                    string crisisFlag, 
                    string printTimes, 
                    string mkbarcode, 
                    string mkprintflag, 
                    string istakeaway, 
                    global::System.Nullable<global::System.DateTime> sqrq, 
                    global::System.Nullable<global::System.DateTime> offBodyTime, 
                    string transDoctel, 
                    decimal Original_sampleId, 
                    string Original_diseaseId, 
                    string Original_barcode, 
                    string Original_pathologyNo, 
                    string Original_reportNo, 
                    string Original_sampleNo, 
                    string Original_customerBarcode, 
                    string Original_requestNo, 
                    string Original_originalPathNo, 
                    string Original_patientName, 
                    string Original_sex, 
                    string Original_age, 
                    string Original_ageType, 
                    global::System.Nullable<global::System.DateTime> Original_birthday, 
                    string Original_menopause, 
                    global::System.Nullable<global::System.DateTime> Original_LMPDate, 
                    string Original_customerCode, 
                    string Original_customerName, 
                    string Original_patientType, 
                    string Original_patientId, 
                    string Original_wardCode, 
                    string Original_wardName, 
                    string Original_bedNo, 
                    string Original_departmentCode, 
                    string Original_departmentName, 
                    string Original_doctorId, 
                    string Original_doctorName, 
                    string Original_cardNo, 
                    string Original_IDNumber, 
                    string Original_medicalInsuranceType, 
                    string Original_medicalInsuranceNo, 
                    global::System.Nullable<global::System.DateTime> Original_collectTime, 
                    global::System.Nullable<global::System.DateTime> Original_receiveTime, 
                    string Original_maritalStatus, 
                    string Original_telphoneNo, 
                    string Original_address, 
                    string Original_diagnosis, 
                    string Original_registrant, 
                    global::System.Nullable<global::System.DateTime> Original_registrationTime, 
                    System.DateTime Original_modifyTime, 
                    string Original_modifier, 
                    System.DateTime Original_createTime, 
                    string Original_creater, 
                    string Original_freezeFlag, 
                    string Original_cellaFlag, 
                    string Original_specimenName, 
                    string Original_specimenType, 
                    string Original_specimenNumber, 
                    string Original_specimenQuantity, 
                    string Original_unqualifiedReason, 
                    string Original_flakingMethod, 
                    string Original_positiveFlag, 
                    string Original_retakeFlag, 
                    global::System.Nullable<global::System.DateTime> Original_reportTime, 
                    string Original_diagnosisDoctor, 
                    string Original_checkDoctor, 
                    string Original_verifier, 
                    string Original_screeningMan, 
                    string Original_sampleDoctorId, 
                    string Original_sampleDoctorName, 
                    global::System.Nullable<global::System.DateTime> Original_sampleTime, 
                    string Original_samplePart, 
                    string Original_checkItemId, 
                    string Original_checkCount, 
                    string Original_pinyiCode, 
                    string Original_wubiCode, 
                    string Original_sampleStatus, 
                    string Original_sap_xsdd, 
                    string Original_postscript, 
                    string Original_firstDoctor, 
                    string Original_approveOfficer, 
                    string Original_payType, 
                    global::System.Nullable<global::System.DateTime> Original_PrintTime, 
                    string Original_Printer, 
                    string Original_PrintMac, 
                    string Original_diseaseName, 
                    int Original_reportDoubleFlag, 
                    string Original_BaseChecker, 
                    string Original_sapTradeFlag, 
                    string Original_crisisFlag, 
                    string Original_printTimes, 
                    string Original_mkbarcode, 
                    string Original_mkprintflag, 
                    string Original_istakeaway, 
                    global::System.Nullable<global::System.DateTime> Original_sqrq, 
                    global::System.Nullable<global::System.DateTime> Original_offBodyTime, 
                    string Original_transDoctel) {
            return this.Update(diseaseId, barcode, pathologyNo, reportNo, sampleNo, customerBarcode, requestNo, originalPathNo, patientName, sex, age, ageType, birthday, menopause, LMPDate, customerCode, customerName, patientType, patientId, wardCode, wardName, bedNo, departmentCode, departmentName, doctorId, doctorName, cardNo, IDNumber, medicalInsuranceType, medicalInsuranceNo, collectTime, receiveTime, maritalStatus, telphoneNo, address, diagnosis, registrant, registrationTime, modifyTime, modifier, createTime, creater, freezeFlag, cellaFlag, specimenName, specimenType, specimenNumber, specimenQuantity, unqualifiedReason, flakingMethod, remark, positiveFlag, retakeFlag, reportTime, diagnosisDoctor, checkDoctor, verifier, screeningMan, sampleDoctorId, sampleDoctorName, sampleTime, samplePart, checkItemId, checkItemName, checkCount, pinyiCode, wubiCode, resultXML, sampleStatus, sap_xsdd, sap_xxmh, postscript, firstDoctor, approveOfficer, payType, PrintTime, Printer, PrintMac, diseaseName, reportDoubleFlag, BaseChecker, neizhu, sapTradeFlag, crisisFlag, printTimes, mkbarcode, mkprintflag, istakeaway, sqrq, offBodyTime, transDoctel, Original_sampleId, Original_diseaseId, Original_barcode, Original_pathologyNo, Original_reportNo, Original_sampleNo, Original_customerBarcode, Original_requestNo, Original_originalPathNo, Original_patientName, Original_sex, Original_age, Original_ageType, Original_birthday, Original_menopause, Original_LMPDate, Original_customerCode, Original_customerName, Original_patientType, Original_patientId, Original_wardCode, Original_wardName, Original_bedNo, Original_departmentCode, Original_departmentName, Original_doctorId, Original_doctorName, Original_cardNo, Original_IDNumber, Original_medicalInsuranceType, Original_medicalInsuranceNo, Original_collectTime, Original_receiveTime, Original_maritalStatus, Original_telphoneNo, Original_address, Original_diagnosis, Original_registrant, Original_registrationTime, Original_modifyTime, Original_modifier, Original_createTime, Original_creater, Original_freezeFlag, Original_cellaFlag, Original_specimenName, Original_specimenType, Original_specimenNumber, Original_specimenQuantity, Original_unqualifiedReason, Original_flakingMethod, Original_positiveFlag, Original_retakeFlag, Original_reportTime, Original_diagnosisDoctor, Original_checkDoctor, Original_verifier, Original_screeningMan, Original_sampleDoctorId, Original_sampleDoctorName, Original_sampleTime, Original_samplePart, Original_checkItemId, Original_checkCount, Original_pinyiCode, Original_wubiCode, Original_sampleStatus, Original_sap_xsdd, Original_postscript, Original_firstDoctor, Original_approveOfficer, Original_payType, Original_PrintTime, Original_Printer, Original_PrintMac, Original_diseaseName, Original_reportDoubleFlag, Original_BaseChecker, Original_sapTradeFlag, Original_crisisFlag, Original_printTimes, Original_mkbarcode, Original_mkprintflag, Original_istakeaway, Original_sqrq, Original_offBodyTime, Original_transDoctel, Original_sampleId);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private BL_SampleinfoTableAdapter _bL_SampleinfoTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public BL_SampleinfoTableAdapter BL_SampleinfoTableAdapter {
            get {
                return this._bL_SampleinfoTableAdapter;
            }
            set {
                this._bL_SampleinfoTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._bL_SampleinfoTableAdapter != null) 
                            && (this._bL_SampleinfoTableAdapter.Connection != null))) {
                    return this._bL_SampleinfoTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._bL_SampleinfoTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateUpdatedRows(MKPathologyDBDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._bL_SampleinfoTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.BL_Sampleinfo.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._bL_SampleinfoTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateInsertedRows(MKPathologyDBDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._bL_SampleinfoTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.BL_Sampleinfo.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._bL_SampleinfoTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateDeletedRows(MKPathologyDBDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._bL_SampleinfoTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.BL_Sampleinfo.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._bL_SampleinfoTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public virtual int UpdateAll(MKPathologyDBDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._bL_SampleinfoTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._bL_SampleinfoTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager 不包含任何连接信息。请将每个 TableAdapterManager TableAdapter 属性设置为有效的 Tabl" +
                        "eAdapter 实例。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("事务无法开始。当前的数据连接不支持事务或当前状态不允许事务开始。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._bL_SampleinfoTableAdapter != null)) {
                    revertConnections.Add(this._bL_SampleinfoTableAdapter, this._bL_SampleinfoTableAdapter.Connection);
                    this._bL_SampleinfoTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._bL_SampleinfoTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._bL_SampleinfoTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._bL_SampleinfoTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bL_SampleinfoTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._bL_SampleinfoTableAdapter != null)) {
                    this._bL_SampleinfoTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._bL_SampleinfoTableAdapter]));
                    this._bL_SampleinfoTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591